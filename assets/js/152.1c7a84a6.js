(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{478:function(t,o,s){"use strict";s.r(o);var v=s(12),_=Object(v.a)({},(function(){var t=this,o=t._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h2",{attrs:{id:"一、什么是acid"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是acid"}},[t._v("#")]),t._v(" 一、什么是ACID")]),t._v(" "),o("blockquote",[o("p",[t._v("事物具有ACID的特性：")]),t._v(" "),o("ul",[o("li",[o("p",[o("strong",[t._v("Atomicity（原子性）")]),t._v("：事务是一个不可分割的整体，事务内所有操作要么全做成功，要么全失败。")])]),t._v(" "),o("li",[o("p",[o("strong",[t._v("Consistency（一致性）")]),t._v("：事务执行前后，数据从一个状态到另一个状态必须是一致的（A向B转账，不能出现A扣了钱，B却没收到）。")])]),t._v(" "),o("li",[o("p",[o("strong",[t._v("Isolation（隔离性）")]),t._v("： 多个并发事务之间相互隔离，不能互相干扰。")])]),t._v(" "),o("li",[o("p",[o("strong",[t._v("Durability（持久性）")]),t._v("：事务完成后，对数据库的更改是永久保存的，不能回滚。")])])])]),t._v(" "),o("h2",{attrs:{id:"二、acid怎么实现"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#二、acid怎么实现"}},[t._v("#")]),t._v(" 二、ACID怎么实现")]),t._v(" "),o("blockquote",[o("p",[t._v("以MySQL为例子，其实现了原子性、一致性、隔离性（可重复读）、可持久性")]),t._v(" "),o("ul",[o("li",[o("p",[o("strong",[t._v("A原子性")]),t._v("：由undolog日志保证，其通过记录修改前后的不同版本的数据，让事物回滚时能够撤销已经执行的SQL")])]),t._v(" "),o("li",[o("p",[o("strong",[t._v("C一致性")]),t._v("：其他三个特性+代码层保证")])]),t._v(" "),o("li",[o("p",[o("strong",[t._v("I隔离行")]),t._v("：由MVCC + undolog（读取各自版本） + 间隙锁（避免幻读）")])]),t._v(" "),o("li",[o("p",[o("strong",[t._v("D持久性")]),t._v("：由内存+redo log来保证，mysql修改数据同时在内存和redo log记录这次操作，事务提交的时候通过redo log刷盘，宕机的时候可以从redo log恢复")])])])])])}),[],!1,null,null,null);o.default=_.exports}}]);