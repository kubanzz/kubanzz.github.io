(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{360:function(e,s,t){"use strict";t.r(s);var a=t(12),n=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),s("ul",[s("li",[e._v("特别推荐（web.xml"),s("a",{attrs:{href:"https://blog.csdn.net/believejava/article/details/43229361",target:"_blank",rel:"noopener noreferrer"}},[e._v("详解"),s("OutboundLink")],1),e._v("）")])]),e._v(" "),s("p"),e._v(" "),s("h2",{attrs:{id:"servlet的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#servlet的生命周期"}},[e._v("#")]),e._v(" Servlet的生命周期")]),e._v(" "),s("ol",[s("li",[e._v("当servlet被部署在应用服务器中（应用服务器中用于"),s("strong",[e._v("管理Java组件")]),e._v("的部分被抽象成为"),s("strong",[e._v("容器")]),e._v("）以后，"),s("strong",[e._v("由容器控制servlet的生命周期。")])]),e._v(" "),s("li",[e._v("除非特殊制定，否则在容器启动的时候，servlet是不会被加载的，"),s("strong",[e._v("servlet只会在第一次请求的时候被加载和实例化")]),e._v("。")]),e._v(" "),s("li",[e._v("servlet一旦被加载，一般不会从容器中删除，直至"),s("strong",[e._v("应用服务器关闭或重新启动")]),e._v("。但当容器做"),s("strong",[e._v("内存回收")]),e._v("动作时，servlet有可能被删除。也正是因为这个原因，第一次访问servlet所用的时间要大大多于以后访问所用的时间。")])]),e._v(" "),s("p"),e._v(" "),s("h2",{attrs:{id:"servlet的工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#servlet的工作原理"}},[e._v("#")]),e._v(" Servlet的工作原理")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontents.com/PI-KA-CHU/Image-OSS/main/images50696114-89c53200-1079-11e9-8b1d-470f2b4cbf95.jpg",alt:"1"}})]),e._v(" "),s("ol",[s("li",[e._v("当客户端向服务器发送请求一个servlet时，服务器收到后首先到容器中检索与请求匹配的Servlet实例是否存在。若不存在，则Servlet容器负责 "),s("strong",[e._v("加载和实例化")]),e._v(" 出该servlet的实例对象，接着容器框架负责调用 "),s("strong",[e._v("init()")]),e._v(" 方法进行一些相关的初始化工作，然后Servlet容器继续调用其 "),s("strong",[e._v("service()")]),e._v(" 方法。若存在，则直接调用该servlet实例的service()方法。然后判断请求的类型，调用doGet或doPost等方法。")])]),e._v(" "),s("blockquote",[s("p",[e._v("Tomcat中的JSP引擎就是一个Servlet程序，负责解释执行JSP页面\n处理流程：\n1）客户通过浏览器向服务器端的JSP页面发送请求。\n2）容器接受到客户请求后，会检查JSP文件对应编译后的Servlet文件（.class）是否存在。如果不存在，则跳转到第4）步，否则执行下一步。\n3）容器检查JSP页面是否有更新（修改），没有更新，则跳转到第5）步，否则执行下一步。\n4）容器将JSP文件转换为Servlet类源文件（.java）。（此步会检查和捕获JSP语法错误）\n5）容器将Servlet源文件（.java）编译成相应的字节码（.class）文件。（会检查和捕获Java语法错误）\n6）容器将字节码（.class）文件加载到内存。\n7）容器实例化Servlet（调用构造函数），然后调用初始化方法（jspInit()）初始化Servlet。到此为止，Servlet对象真正成为一个Servlet，准备就绪，可以处理客户的请求了。\n8）容器创建一个新的线程来运行Servlet并运行Servlet的_jspService()方法处理客户的请求。\n9）Servlet生成并向客户返回一个响应（或把请求转发给另一个Web应用组件处理）。")])]),e._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[e._v("通常，"),s("strong",[e._v("一个Servlet在容器中只有一个实例")]),e._v("，每当有请求来到时，则分配一条"),s("strong",[e._v("线程")]),e._v("进行处理。")]),e._v(" "),s("li",[e._v("在处理请求时：")])]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Servlet容器会创建一个请求对象"),s("strong",[e._v("ServletRequst")]),e._v("，其中封装了用户请求的信息，以便处理客户端请求，此外还会创建一个响应对象"),s("strong",[e._v("ServletResponse")]),e._v("，用于响应客户端请求，想客户端返回数据。")])]),e._v(" "),s("li",[s("p",[e._v("然后Servlet容器把创建好的ServletRequst和ServletResponse对象传给用户所请求的Servlet。")])]),e._v(" "),s("li",[s("p",[e._v("Servlet利用"),s("strong",[e._v("ServletResponse包含的数据和自身的业务逻辑处理请求")]),e._v("，并把处理好的结果写在ServletResponse中，最后Servlet容器把响应结果传给用户。")])])]),e._v(" "),s("p"),e._v(" "),s("h2",{attrs:{id:"javabean学习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javabean学习"}},[e._v("#")]),e._v(" JavaBean学习")]),e._v(" "),s("p",[s("strong",[e._v("什么是javaBean，如何进行交互：")])]),e._v(" "),s("ul",[s("li",[e._v("JavaBean是一种用JAVA语言编写的可重用的组件，用户可以使用javaBean进行"),s("strong",[e._v("业务逻辑")]),e._v("及"),s("strong",[e._v("数据库操作")]),e._v("的打包，其他开发者可以通过"),s("strong",[e._v("Jsp，Servlet，其他javaBean，Applet")]),e._v("等对javaBean进行操作，用户可以认为JavaBean提供了一种随时随地的复制和粘贴的功能，而不用关心任何改变。")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('<jsp:useBean id="loginUser" class="com.po.Users" scope="page"></jsp:useBean>\n<jsp:useBean id="userDao" class="Dao.UserDao"></jsp:useBean>\n<jsp:setProperty name="beanName" property="propertyName" value="">\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[s("strong",[e._v("Bean的三大特性：")])]),e._v(" "),s("ul",[s("li",[e._v("独立性")]),e._v(" "),s("li",[e._v("可重用性")]),e._v(" "),s("li",[e._v("状态可保存性")])]),e._v(" "),s("p",[s("strong",[e._v("javaBean的三大核心部分：")])]),e._v(" "),s("ul",[s("li",[e._v("属性（properties）")]),e._v(" "),s("li",[e._v("方法（method）")]),e._v(" "),s("li",[e._v("事件（event）")])]),e._v(" "),s("blockquote",[s("p",[e._v("事件为JavaBean组件提供了一种发送通知给其他组件的方法。在AWT事件模型中，一个事件源可以注册事件监听器对象。当事件源检测到发生了某种事件时，它将调用事件监听器对象中的一个适当的事件处理方法来处理这个事件。")])]),e._v(" "),s("p",[s("strong",[e._v("javaBean的三大构件：")])]),e._v(" "),s("ul",[s("li",[s("p",[s("strong",[e._v("Session bean：")]),e._v(" "),s("em",[e._v("会话构件")]),e._v("，是短暂的对象，运行在服务器上，并执行一些应用逻辑处理，它由客户端应用程序建立，其数据需要自己来管理。分为无状态和有状态两种。")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("Entity bean：")]),e._v(" "),s("em",[e._v("实体构件")]),e._v("，是持久对象，可以被其他对象调用。在建立时指定一个唯一标示的标识，并允许客户程序，根据实体bean标识来定位beans实例。多个实体可以并发访问实体bean，事务间的协调由容器来完成。")])]),e._v(" "),s("li",[s("p",[s("strong",[e._v("MessageDriven Bean：")]),e._v(" "),s("em",[e._v("消息构件")]),e._v("，是专门用来处理JMS（Java Message System）消息的规范（EIB2.0）。JMS是一种与厂商无关的API，用来访问消息收发系统，并提供了与厂商无关的访问方法，以此来访问消息收发服务。JMS客户机可以用来发送消息而不必等待回应。")])])]),e._v(" "),s("p"),e._v(" "),s("h2",{attrs:{id:"其他的常见问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他的常见问题"}},[e._v("#")]),e._v(" 其他的常见问题")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("Session用哪些方法设置超时时间？")])])]),e._v(" "),s("p",[e._v("优先级："),s("strong",[e._v("Servlet中API设置 > 程序/web.xml设置 > Tomcat/conf/web.xml设置")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("\n//方式一：在web.xml中设置session-config\n<session-config>\n  <session-timeout>2</session-timeout>\n</session-config>\n\n\n//方式二：在Tomcat的/conf/web.xml中session-config，默认值为30分钟\n <session-config>\n        <session-timeout>30</session-timeout>\n </session-config>\n\n\n//方式三：在servlet中设置\nHttpSession session = request.getSession();\nsession.setMaxInactiveInterval(60);//单位为秒\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br")])]),s("ul",[s("li",[s("strong",[e._v("session存取对象分别用什么方法？")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("request.getSession.getAttribute()\nrequest.getSession.setAttribute()\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("ul",[s("li",[s("strong",[e._v("Web.xml文件的位置？")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("WebContent/WEB-INF/\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[s("strong",[e._v("创建一个监听类，需要实现什么接口？")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("监听不同的类型的类需要实现不同的接口，如HttpSessionListener\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[s("strong",[e._v("Response对象的什么方法可以将cookie写入会话中重写URL接口？")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("response.encodeRedirectURL(“”)\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("ul",[s("li",[s("strong",[e._v("Filter控制生命周期的方法是哪三个？")])])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("init()，doFilter()，destroy()\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);