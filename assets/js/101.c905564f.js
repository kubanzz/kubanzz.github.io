(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{429:function(s,n,a){"use strict";a.r(n);var e=a(12),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[n("strong",[n("a",{attrs:{href:"http://flume.apache.org/releases/content/1.9.0/FlumeUserGuide.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("flume官方文档"),n("OutboundLink")],1)])]),s._v(" "),n("p",[n("strong",[n("a",{attrs:{href:"http://www.51niux.com/?id=197",target:"_blank",rel:"noopener noreferrer"}},[s._v("技术博客（较全面的介绍）"),n("OutboundLink")],1)])]),s._v(" "),n("p"),s._v(" "),n("h2",{attrs:{id:"一、flume的核心组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、flume的核心组件"}},[s._v("#")]),s._v(" 一、Flume的核心组件")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("source")]),s._v("：用于对源文件的监控（即数据的传入点）")]),s._v(" "),n("li",[n("strong",[s._v("channel")]),s._v("：用于event数据的传输（即传输管道）")]),s._v(" "),n("li",[n("strong",[s._v("sink")]),s._v("：用于event数据的输出（即输出点）")])]),s._v(" "),n("h3",{attrs:{id:"_1-1-flume的source类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-flume的source类型"}},[s._v("#")]),s._v(" 1.1 Flume的source类型")]),s._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://www.cnblogs.com/swordfall/p/8254271.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考一"),n("OutboundLink")],1)])]),s._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://www.cnblogs.com/qingyunzong/p/8995554.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考二"),n("OutboundLink")],1)])]),s._v(" "),n("li",[n("p",[n("a",{attrs:{href:"http://flume.apache.org/FlumeUserGuide.html#flume-sources",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考三"),n("OutboundLink")],1),s._v("（"),n("strong",[s._v("官方文档")]),s._v("）")]),s._v(" "),n("p",[s._v("source类型的种类比较多，上面是关于各种类型的介绍，比较常用的是avor、thrift、exec、jms、spool，本次记录使用的是spool，spool是对"),n("strong",[s._v("本地文件的监视")]),s._v("，即监视文件夹中的文件，将新加入的文件进行处理上传，成功处理后的文件默认后缀会加上**.COMPLETED**（可自定义修改，也可修改为在上传后删除）。")])])]),s._v(" "),n("h3",{attrs:{id:"_1-2-flume的chancel类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-flume的chancel类型"}},[s._v("#")]),s._v(" 1.2 Flume的chancel类型")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("Memory Channel")]),s._v("：基于内存传输，实现高速吞吐，但无法保证数据的完整性。")]),s._v(" "),n("li",[n("strong",[s._v("JDBC Channel")]),s._v("：事件会被"),n("strong",[s._v("持久化")]),s._v("（存储）到可靠的数据库里，目前支持嵌入式Derby数据库，但是该数据库使用起来不太方便，目前不适用于生产环境。")]),s._v(" "),n("li",[n("strong",[s._v("File Channel")]),s._v("：基于磁盘传输（"),n("strong",[s._v("持久化")]),s._v("隧道），将事件存储于磁盘中，即使宕机也能保证数据的完整性，即数据不会丢失。")]),s._v(" "),n("li",[n("strong",[s._v("Psuedo Transaction Channel")]),s._v("（不常见）")]),s._v(" "),n("li",[s._v("相关参数及详情参考最上方的官方文档及技术博客")])]),s._v(" "),n("h3",{attrs:{id:"_1-3-flume的sink类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-flume的sink类型"}},[s._v("#")]),s._v(" 1.3 Flume的sink类型")]),s._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://www.cnblogs.com/swordfall/p/8157766.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("sink类型同样有很多种，如hdfs sink、hbase sink、avor sink、logger sink等（详情参考上面链接），本案例使用的是hdfs sink，即将日志数据通过flume收集传输到hdfs。")])])]),s._v(" "),n("p"),s._v(" "),n("h2",{attrs:{id:"二、flume的常见使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、flume的常见使用"}},[s._v("#")]),s._v(" 二、Flume的常见使用")]),s._v(" "),n("br"),s._v(" "),n("h3",{attrs:{id:"_2-1-多层代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-多层代理"}},[s._v("#")]),s._v(" 2.1 多层代理")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontents.com/PI-KA-CHU/Image-OSS/main/images57234496-56a8a480-7053-11e9-8d6e-223dff119718.png",alt:"image"}})]),s._v(" "),n("h3",{attrs:{id:"_2-2-并流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-并流"}},[s._v("#")]),s._v(" 2.2 并流")]),s._v(" "),n("ul",[n("li",[s._v("从大量Web服务器收集的日志发送给写入HDFS集群的十几个代理，即收集服务器集群的日志文件，汇流到代理flume并存入hdfs")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontents.com/PI-KA-CHU/Image-OSS/main/images57234574-8788d980-7053-11e9-93e3-9b1b96be2638.png",alt:"image"}})]),s._v(" "),n("h3",{attrs:{id:"_2-3-多路复用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-多路复用"}},[s._v("#")]),s._v(" 2.3 多路复用")]),s._v(" "),n("ul",[n("li",[s._v("将事件流"),n("strong",[s._v("多路复用")]),s._v("到一个或多个目的地。这是通过定义可以复制或选择性地将事件路由到一个或多个信道的流复用器来实现的。即同一个数据源的日志文件我们可能需要分配到多处进行处理，或者说有多个子系统需要使用到，此时可以使用到多路复用，sink指向不同的目的地。")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontents.com/PI-KA-CHU/Image-OSS/main/images57234813-1138a700-7054-11e9-8cf9-1dd6acfa3213.png",alt:"image"}})]),s._v(" "),n("p"),s._v(" "),n("h2",{attrs:{id:"三、flume的相关配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、flume的相关配置"}},[s._v("#")]),s._v(" 三、flume的相关配置")]),s._v(" "),n("h3",{attrs:{id:"_3-1-flume-env-sh文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-flume-env-sh文件"}},[s._v("#")]),s._v(" 3.1 flume-env.sh文件")]),s._v(" "),n("ul",[n("li",[s._v("如果Hadoop相关支持包已经导入到flume的lib中，则配置flume的lib路径")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('$FLUME_CLASSPATH="D:\\flume\\apache-flume-1.8.0-bin\\lib"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("如果Flume/lib中没有Hadoop相关支持包，则需要指定本地Hadoop路径")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('HADOOP_HOME="G:\\\\hadoop-2.5.0-cdh5.3.6"\nFLUME_CLASSPATH="$HADOOP_HOME/share/hadoop/hdfs//hadoop-hdfs-2.5.0-cdh5.3.1.jar"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"_3-2-example-conf文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-example-conf文件"}},[s._v("#")]),s._v(" 3.2 example.conf文件")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\n# flume相关组件的声明\na1.sources = r1\na1.sinks = k1 k2\na1.channels = c1 c2\n\n# 设置source r1\n# fileHeader：是否添加绝对路径的标头\n# inputCharset：传入event的编码格式\n# ignorePattern：忽略的文件名，此处匹配的文件不会被传输（可用正则）\n# includePattern：包含的文件名，此处匹配的文件会被传输（可用正则）\na1.sources.r1.type = spooldir\na1.sources.r1.spoolDir = E:\\\\BigDataSolf\\\\log\\\\uploadTest\na1.sources.r1.fileHeader = true\na1.sources.r1.inputCharset  = GBK\n# a1.sources.r1.ignorePattern = catalina.*\na1.sources.r1.includePattern = app.*\n\n\n# 配置r1拦截器(自定义拦截器)，自定义拦截器需要打成jar包后放在flume的lib文件夹中，后面会有自定义拦截器的介绍。\n# type：拦截器类型（此处为自定义的拦截器）\n# regexs和datePattern：都是自定义的正则参数\na1.sources.r1.interceptors = i1\na1.sources.r1.interceptors.i1.type = com.bnuz.flume.MyLogBuilder\na1.sources.r1.interceptors.i1.regexs = localhost_access_log,app\na1.sources.r1.interceptors.i1.datePattern = [0-9]{4}-[0-9]{2}-[0-9]{2}\n\n# 配置多路复用选择器（根据头信息进行分流）\n# header：指header中的参数名称（类似于key）\n# mapping.localhost_access_log：localhost_access_log相当于value，即如果myHeader匹配的value为localhost_access_log就使用c1管道，如果是app则使用c2管道。\na1.sources.r1.selector.type = multiplexing\na1.sources.r1.selector.header = myHeader\na1.sources.r1.selector.mapping.localhost_access_log = c1\na1.sources.r1.selector.mapping.app = c2\n\n\n# Use a channel which buffers events in memory for c1\na1.channels.c1.type = memory\na1.channels.c1.capacity = 8000\na1.channels.c1.transactionCapacity = 1000\n\n# Use a channel which buffers events in memory for c2\na1.channels.c2.type = memory\na1.channels.c2.capacity = 8000\na1.channels.c2.transactionCapacity = 1000\n\n\n# configure the sink k1\n# %{fileDate}是自定义拦截器中加入的日期参数，用于将日志文件按照日期保存到不同的文件夹中\n# 将access_log文件传输到access_log文件夹中\n# fileSuffix：保存的文件前缀\n# fileSuffix：保存的文件后缀\n# useLocalTimeStamp：为每个文件名加上存储时的时间戳\na1.sinks.k1.type=hdfs\na1.sinks.k1.hdfs.path=hdfs://127.0.0.1/logs/zhsj/%{fileDate}/access_log\na1.sinks.k1.hdfs.fileType=DataStream\na1.sinks.k1.hdfs.writeFormat=TEXT\na1.sinks.k1.hdfs.filePrefix=%{fileDate}\na1.sinks.k1.hdfs.fileSuffix=.log\na1.sinks.k1.hdfs.rollInterval=0\na1.sinks.k1.hdfs.rollSize=10240000\na1.sinks.k1.hdfs.rollCount=0\na1.sinks.k1.hdfs.minBlockReplicas=1\na1.sinks.k1.hdfs.useLocalTimeStamp = true\n\n# configure the sink k2\na1.sinks.k2.type=hdfs\na1.sinks.k2.hdfs.path=hdfs://127.0.0.1/logs/zhsj/%{fileDate}/app_log/\na1.sinks.k2.hdfs.fileType=DataStream\na1.sinks.k2.hdfs.writeFormat=TEXT\na1.sinks.k2.hdfs.filePrefix=%{fileDate}\na1.sinks.k2.hdfs.fileSuffix=.log\na1.sinks.k2.hdfs.rollInterval=0\na1.sinks.k2.hdfs.rollSize=10240000\na1.sinks.k2.hdfs.rollCount=0\na1.sinks.k2.hdfs.minBlockReplicas=1\na1.sinks.k2.hdfs.useLocalTimeStamp = true\n\n\n# Bind the source r1 and sink to the channel\n# 绑定不同的channel、sink和source间的关系\na1.sources.r1.channels = c1 c2\na1.sinks.k1.channel = c1\na1.sinks.k2.channel = c2\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br")])]),n("p"),s._v(" "),n("h2",{attrs:{id:"四、flume的自定义拦截器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、flume的自定义拦截器"}},[s._v("#")]),s._v(" 四、flume的自定义拦截器")]),s._v(" "),n("ul",[n("li",[s._v("此拦截器用于对event的简单过滤，并为不同文件和时间的event进行标识，flume配置文件（如上）会根据参数的不同保存到不同的文件夹中。将写好的拦截器打包成"),n("code",[s._v("jar包")]),s._v("并保存到flume的"),n("code",[s._v("lib")]),s._v("文件夹中。")])]),s._v(" "),n("p",[s._v("MyLogBuilder（拦截器入口）")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('import org.apache.flume.Context;\nimport org.apache.flume.interceptor.Interceptor;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class MyLogBuilder implements Interceptor.Builder{\n    private Logger log = LoggerFactory.getLogger(MyLogBuilder.class);\n    private String regexs = "";\n    private String datePattern = "";\n\n    //获取传入的相关参数\n    @Override\n    public void configure(Context context) {\n        regexs = context.getString("regexs");\n        datePattern = context.getString("datePattern");\n        log.info("------获取到拦截器参数pattern为：" + regexs);\n    }\n    \n    //调用拦截器并传入参数\n    @Override\n    public Interceptor build() {\n        log.info("------初始化自定义拦截器");\n        return new MyLogInterceptor(regexs,datePattern);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("p",[s._v("MyLogInterceptor（拦截器的实现）")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('import org.apache.commons.io.Charsets;\nimport org.apache.flume.Event;\nimport org.apache.flume.interceptor.Interceptor;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.util.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\npublic class MyLogInterceptor implements Interceptor {\n\n    private Logger log = LoggerFactory.getLogger(MyLogInterceptor.class);\n\n    //文件地址（包含文件名）\n    private String filePath = "";\n\n    //文件类型过滤参数\n    private String regexs = "";\n\n    //日期格式（正则表达式）\n    private String datePattern = "";\n\n    //日志日期键值\n    private final String FILE_DATE_KEY = "fileDate";\n    private String fileDateValue = "";\n\n    //日志类型键值\n    private  final String HEADER_KEY = "myHeader";\n    private String headerValue = "";\n\n    MyLogInterceptor(String regexs,String datePattern){\n        this.regexs = regexs;\n        this.datePattern = datePattern;\n    }\n\n    @Override\n    public void initialize() {\n        log.info(regexs + "拦截器initialize方法执行");\n    }\n\n    /**\n     * 对每个事件进行拦截修改\n     *\n     * @param event 文件事件\n     * @return\n     */\n    @Override\n    public Event intercept(Event event) {\n\n\n        /**\n         * 根据不同的日志文件内容进行不同的正则表达式匹配\n         * access日志文件每天生成一次，则直接使用文件名进行日期匹配（文件名包含日志）\n         * app日志文件几天生成一次文件，根据具体日志数据进行匹配\n         */\n        Pattern pattern = pattern = Pattern.compile(datePattern);\n        Matcher matcher = null;\n        if (filePath.contains("localhost_access_log")){\n            //通过正则表达式获取日志创建日期\n            matcher  = pattern.matcher(filePath);\n        }else if(filePath.contains("app.")){\n            //日志具体数据\n            String bodyData = new String(event.getBody(), Charsets.UTF_8);\n            log.info("收集到的数据为：{}",bodyData);\n            matcher = pattern.matcher(bodyData);\n        }\n\n        if (matcher != null && matcher.find()){\n            log.info("匹配到日期为：" + matcher.group(0));\n            fileDateValue = matcher.group(0);\n\n            event.getHeaders().put(HEADER_KEY,headerValue);\n            event.getHeaders().put(FILE_DATE_KEY,fileDateValue);\n\n            return event;\n        }else {\n            log.info("信息被过滤");\n            return null;\n        }\n    }\n\n    @Override\n    public List<Event> intercept(List<Event> list) {\n\n        List<Event> result = new ArrayList<>();\n        //获取文件名\n        filePath = list.get(0).getHeaders().get("file");\n        \n        //将传入的过滤参数进行切割\n        String[] regexArr = regexs.split(",");\n        for (String s : regexArr) {\n            if (filePath.contains(s)) {\n                log.info("合法文件，允许放行 - {}", filePath);\n\n                //设置header键值，用于多路复用（source根据头键值不同进行不同channel的选择）\n                headerValue = s;\n                Event event1;\n                for (Event event : list){\n                    event1 = intercept(event);\n                    if (event1 != null){\n                        result.add(event1);\n                    }\n                }\n                return result;\n            }\n        }\n        log.info("拦截器拦截非法文件 - {}",filePath);\n        return result;\n    }\n\n    @Override\n    public void close() {\n        log.info("拦截器关闭");\n    }\n\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br")])]),n("p"),s._v(" "),n("h2",{attrs:{id:"五、windows下flume的启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五、windows下flume的启动"}},[s._v("#")]),s._v(" 五、windows下flume的启动")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("打开cmd命令进入flume的bin文件中")])]),s._v(" "),n("li",[n("p",[s._v("使用如下命令启动：（windows启动需要注释掉部分代码）")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("flume-ng agent --conf ../conf --conf-file ../conf/example.conf --name a1 -property flume.root.logger=INFO,console\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p"),s._v(" "),n("h2",{attrs:{id:"六、异常及解决"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六、异常及解决"}},[s._v("#")]),s._v(" 六、异常及解决：")]),s._v(" "),n("ul",[n("li",[s._v("参考："),n("code",[s._v("Flume收集日志 - windows（配置版）")])])])])}),[],!1,null,null,null);n.default=t.exports}}]);