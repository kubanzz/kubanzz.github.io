(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{341:function(t,a,s){"use strict";s.r(a);var e=s(12),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一、常见的oom异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、常见的oom异常"}},[t._v("#")]),t._v(" 一、常见的OOM异常")]),t._v(" "),a("blockquote",[a("p",[t._v("常见的OOM可以分为以下三类：")]),t._v(" "),a("ol",[a("li",[t._v("线程打开过多")]),t._v(" "),a("li",[t._v("内存不足（内存溢出或内存泄漏）")]),t._v(" "),a("li",[t._v("文件打开过多（IO流处理）")])])]),t._v(" "),a("h3",{attrs:{id:"_1-1-线程oom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-线程oom"}},[t._v("#")]),t._v(" 1.1 线程OOM")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_37968613/article/details/104490441",target:"_blank",rel:"noopener noreferrer"}},[t._v("实践"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("异常日志")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" in thread "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("OutOfMemoryError")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" unable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("native")]),t._v(" thread"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" possibly out of memory or process"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("resource limits reached\n\tat java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Native")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("801")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("ThreadPoolExecutor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWorker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadPoolExecutor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("939")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("ThreadPoolExecutor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ThreadPoolExecutor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1356")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("AbstractExecutorService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("submit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AbstractExecutorService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("118")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("company"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hpv9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[a("strong",[t._v("排查过程")])]),t._v(" "),a("blockquote",[a("p",[t._v("通过OOM异常日志，可以知道是由于无法创建线程导致的OOM，并且可以根据栈信息定位问题代码的位置。")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("// 查看当前开启的线程数量\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" proc/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("pid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/status\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220913004852163.png",alt:"image-20220913004852163"}})]),t._v(" "),a("p",[a("strong",[t._v("优化")])]),t._v(" "),a("ol",[a("li",[t._v("服务器参数优化")])]),t._v(" "),a("blockquote",[a("p",[t._v("// 查看操作系统对每个进程的线程数限制，可以进行调大")]),t._v(" "),a("p",[t._v("cat /proc/sys/kernel/threads-max")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagese92f92873cbd48d3b599060a94e32a65~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp",alt:"线程数限制.png"}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("业务代码优化\n"),a("ul",[a("li",[t._v("替换"),a("code",[t._v("new Thread")]),t._v("为线程池，控制线程创建数量")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-2-文件oom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-文件oom"}},[t._v("#")]),t._v(" 1.2 文件OOM")]),t._v(" "),a("p",[a("strong",[t._v("异常信息")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("art"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ashmem_create_region failed "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" 'indirect ref table'"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Too")]),t._v(" many "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("files")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Java")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OutOfMemoryError"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Could")]),t._v(" not allocate JNI "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Env")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("strong",[t._v("问题分析")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("系统问题")]),t._v("：操作系统对每个进程都有资源的限制，而默认的资源限制通常比较少，需要我们根据业务需求进行调高。")]),t._v(" "),a("p",[a("strong",[t._v("代码问题")]),t._v("：如果IO操作有误，没有及时关闭IO流，或者突然大量用户线程同时创建大量文件，也可能出现这个问题。")])]),t._v(" "),a("p",[a("strong",[t._v("排查过程")])]),t._v(" "),a("blockquote",[a("ol",[a("li",[a("p",[t._v("通过"),a("strong",[t._v("异常日志")]),t._v("，可以知道是在哪里位置出现了文件创建异常问题，初步检查该位置的代码。")])]),t._v(" "),a("li",[a("p",[t._v("如果没问题，则通过收集到的"),a("strong",[t._v("dumpFd（文件描述符）")]),t._v("，可以看到很多"),a("strong",[t._v("重复的文件名")]),t._v("，进而大致定位到问题。")])]),t._v(" "),a("li",[a("p",[t._v("检查到异常文件名后，再检查该文件的创建位置，进而进行"),a("strong",[t._v("IO流")]),t._v("相关代码的检查。")])])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("查看文件资源限制")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("cat /proc/pid/limits")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimagesimage-20220913005902463.png",alt:"image-20220913005902463"}})]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ulimit -n")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220913225351404.png",alt:"image-20220913225351404"}})])])]),t._v(" "),a("p",[a("strong",[t._v("监控机制")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("文件描述符监控")]),t._v("：Linux 系统一切皆文件，进程每打开一个文件就会产生一个文件描述符fd（记录在/proc/pid/fd下面）。当fd数大于1000个，或者fd连续递增超过50个，就触发fd收集，将fd对应的文件路径上报到后台。")]),t._v(" "),a("li",[a("strong",[t._v("IO监控")]),t._v("：监控完整的IO操作，包括"),a("code",[t._v("open、read、write、close")]),t._v("，通过在IO操作中插入勾子进行监控。")])]),t._v(" "),a("h3",{attrs:{id:"_1-3-内存oom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-内存oom"}},[t._v("#")]),t._v(" 1.3 内存OOM")]),t._v(" "),a("p",[a("strong",[t._v("异常信息")])]),t._v(" "),a("ul",[a("li",[t._v("堆区")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" in thread "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("OutOfMemoryError")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Java")]),t._v(" heap space\n\tat com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("company"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hpv9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[t._v("元方法区")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// todo")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("堆外内存")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("nio handle failed "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v("OutOfMemoryError")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Direct")]),t._v(" buffer memory at org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eclipse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jetty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxxx\nat org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eclipse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jetty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxxx at org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("eclipse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jetty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("nio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxxx\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("strong",[t._v("问题分析")])]),t._v(" "),a("blockquote",[a("p",[t._v("JVM中JMM发生OOM的区域最常见的是"),a("strong",[t._v("堆区")]),t._v("，"),a("strong",[t._v("元方法区")]),t._v("和"),a("strong",[t._v("堆外内存")]),t._v("。")]),t._v(" "),a("p",[a("strong",[t._v("配置问题")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("堆区太小（内存溢出）：JVM默认的堆区大小比较少，需要通过参数配置调大堆区内存，而堆区又分为年轻代和老年代，可以参考下面的#参数调优进行相关配置。")]),t._v(" "),a("li",[t._v("Eden区太小 + System.gc关闭（过早晋升）：如果年轻代内存分配过小频繁YGC，导致引用堆外内存的对象提前进入老年代，并且老年代没来得及进行GC，则可能导致堆外内存OOM。")])]),t._v(" "),a("p",[a("strong",[t._v("代码问题")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("堆区：代码中的错误处理导致"),a("strong",[t._v("内存泄漏")]),t._v("，如ThreadLocal。")]),t._v(" "),a("li",[t._v("元方法区："),a("strong",[t._v("反射")]),t._v("的异常使用导致类不断被加载，进而导致元方法区OOM。")]),t._v(" "),a("li",[t._v("堆外内存：（部分框架会用到堆外内存，例如Netty）\n"),a("ul",[a("li",[t._v("堆外内存泄漏（"),a("strong",[t._v("框架bug")]),t._v("-"),a("a",{attrs:{href:"https://mp.weixin.qq.com/s/DESrF57_tDWH2TVqwe574g",target:"_blank",rel:"noopener noreferrer"}},[t._v("美团Netty案例"),a("OutboundLink")],1),t._v("）：Netty框架源码NPE导致内存泄漏，进而导致堆外内存的OOM，其通过反射监控堆外内存的大小，并逐渐缩小范围，最后找到并处理bug。")])])])])]),t._v(" "),a("p",[a("strong",[t._v("排查过程")])]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("配置JVM参数打印OOM时的堆区信息（"),a("code",[t._v(".hprof")]),t._v("文件）")]),t._v(" "),a("li",[t._v("通过MAT工具解析hprof文件")]),t._v(" "),a("li",[t._v("通过"),a("code",[t._v("Histogram")]),t._v("视图可以查看当前的实例占用的内存情况（通常会有占用内存很大的实例对象）")]),t._v(" "),a("li",[t._v("通过对象引用、GC Root Path等调用链视图，定位问题代码")])])]),t._v(" "),a("h2",{attrs:{id:"二、mat内存监控工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、mat内存监控工具"}},[t._v("#")]),t._v(" 二、MAT内存监控工具")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://www.eclipse.org/mat/downloads.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载地址"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.jiweichengzhu.com/article/db04c076f3e848e8857b7aec1d519db9",target:"_blank",rel:"noopener noreferrer"}},[t._v("实践参考一"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("JVM 内存分析工具 MAT 的深度讲解与实践")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6908665391136899079",target:"_blank",rel:"noopener noreferrer"}},[t._v("*入门篇"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6911624328472133646",target:"_blank",rel:"noopener noreferrer"}},[t._v("*进阶篇"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/trust-freedom/p/6744948.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("*参考二"),a("OutboundLink")],1)])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/images677054-20170422185915024-1478731293.jpg",alt:"img"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220914002550594.png",alt:"image-20220914002550594"}})]),t._v(" "),a("h3",{attrs:{id:"_2-1-常见内存分析工具对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-常见内存分析工具对比"}},[t._v("#")]),t._v(" 2.1 常见内存分析工具对比")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("产品功能")]),t._v(" "),a("th",[t._v("MAT")]),t._v(" "),a("th",[t._v("JProfiler")]),t._v(" "),a("th",[t._v("Visual VM")]),t._v(" "),a("th",[t._v("jhat")]),t._v(" "),a("th",[t._v("jmap")]),t._v(" "),a("th",[t._v("hprof")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("对象关联分析、深浅堆、GC ROOT、内存泄漏检测、线程分析、提供自定义程序扩展扩展")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")])]),t._v(" "),a("tr",[a("td",[t._v("离线全局分析")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")])]),t._v(" "),a("tr",[a("td",[t._v("内存实时分配情况")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("Y")])]),t._v(" "),a("tr",[a("td",[t._v("OQL")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")])]),t._v(" "),a("tr",[a("td",[t._v("内存分配堆栈、热点比例")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("Y")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")])]),t._v(" "),a("tr",[a("td",[t._v("堆外内存分析")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")]),t._v(" "),a("td",[t._v("N")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-2-基础概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-基础概念"}},[t._v("#")]),t._v(" 2.2 基础概念")]),t._v(" "),a("p",[a("strong",[t._v("Shallow Heap")])]),t._v(" "),a("blockquote",[a("p",[t._v("Shallow Heap 代表一个"),a("strong",[t._v("对象结构自身")]),t._v("所占用的内存大小，不包括其属性引用对象所占的内存。如 java.util.ArrayList 对象的 Shallow Heap 包含8字节的对象头、8字节的对象数组属性 elementData 引用 、 4字节的 size 属性、4字节的 modCount 属性。")])]),t._v(" "),a("p",[a("strong",[t._v("Retained Set")])]),t._v(" "),a("blockquote",[a("p",[t._v("一个对象的 Retained Set，指的是该对象被 GC 回收后，所有能被回收的对象集合。")])]),t._v(" "),a("p",[a("strong",[t._v("Retained Heap")])]),t._v(" "),a("blockquote",[a("p",[t._v("Retained Heap 是一个对象被 GC 回收后，可释放的内存大小，等于释放对象的 Retained Heap 中所有对象的 Shallow Heap 的和。")])]),t._v(" "),a("p",[a("strong",[t._v("Dominator tree")])]),t._v(" "),a("blockquote",[a("p",[t._v("Dominator tree 是根据对象引用及支配关系生成的整体树状图，支配树清晰描述了对象间的依赖关系，可以认为是对象的引用树。")]),t._v(" "),a("ul",[a("li",[t._v("Dominator tree 中任一节点的子树就是被该节点支配的节点集合，也就是其 "),a("strong",[t._v("Retain Set")]),t._v("。")])])]),t._v(" "),a("p",[a("strong",[t._v("OQL")])]),t._v(" "),a("blockquote",[a("p",[t._v("OQL 是类似于 SQL 的 MAT 专用统一查询语言，可以根据复杂的查询条件对 dump 文件中的类或者对象等数据进行查询筛选。")])]),t._v(" "),a("p",[a("strong",[t._v("references")])]),t._v(" "),a("blockquote",[a("p",[t._v("outgoing references、incoming references 可以直击对象间依赖关系，MAT 也提供了链式快速操作。")]),t._v(" "),a("ul",[a("li",[t._v("outgoing references：对象引用的外部对象（注意不包含对象的基本类型属性。基本属性内容可在 inspector 查看）。")]),t._v(" "),a("li",[t._v("incoming references：直接引用了当前对象的对象，每个对象的 incoming references 可能有 0 到多个。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-3-mat功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-mat功能"}},[t._v("#")]),t._v(" 2.3 MAT功能")]),t._v(" "),a("blockquote",[a("p",[t._v("MAT 的工作原理是"),a("strong",[t._v("对 dump 文件建立多种索引")]),t._v("，并基于索引来实现以下四个功能，分别为【内存分布、对象依赖、对象状态和条件检索】，并通过可视化展现辅助 Developer 精细化了解 JVM 堆内存全貌。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("[1]内存分布（重点）")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Overview")]),t._v("（全局概览信息）：堆内存大小、对象个数、类的个数、类加载器的个数、GC root 个数等基本信息。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220914001200494.png",alt:"image-20220914001200494"}})]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Dominator tree")]),t._v("（对象引用树）：包含对象的内存占用大小及对象的相互引用情况。按对象的 "),a("code",[t._v("Retain Heap")]),t._v(" 排序，也支持按多个维度聚类统计。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220914001214948.png",alt:"image-20220914001214948"}})]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Histogram")]),t._v("（实例内存占比）：罗列每个类实例的内存占比，包括自身内存占用量（Shallow Heap）及支配对象的内存占用量（Retain Heap），支持按 package、class loader、super class、class 聚类统计。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220914001229614.png",alt:"image-20220914001229614"}})]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Leak Suspects")]),t._v("（可疑泄漏点）：MAT提供的问题分析工具，可以简单分析可能出现问题的地方，可解决一些基础问题，但复杂的问题往往帮助有限。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220914001517072.png",alt:"image-20220914001517072"}})])]),t._v(" "),a("li",[a("p",[t._v("[2]对象间依赖（如实体对象引用关系、线程引用关系、GC Root引用关系等）")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Thread overview")]),t._v("（线程调用栈）：展现转储 dump 文件时线程栈帧等详细状态，也提供各线程的 Retain Heap 等关联内存信息。（两种方式查看，一种是直接点击上方的Thread overview，查看所有线程信息，一种是在Dominator tree中右键查看其线程信息）")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220914002411304.png",alt:"image-20220914002411304"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220914001714918.png",alt:"image-20220914001714918"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220914002038575.png",alt:"image-20220914002038575"}})]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Dominator tree")]),t._v("：该视图即为对象间的引用关系。除了直接用Dominator视图之外（显示了线程或class loader的对象引用关系），还可以在Histogram视图右键如下图，显示该对象及引用了该对象的对象。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220915001044459.png",alt:"image-20220915001044459"}})]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("Path To GC Roots")]),t._v("（对象到GC Root的引用链路）：提供任一对象到GC Root的链路详情，帮助了解不能被 GC 回收的原因")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220914235837087.png",alt:"image-20220914235837087"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220915000013601.png",alt:"image-20220915000013601"}})])]),t._v(" "),a("li",[a("p",[t._v("[3]对象状态（内存占用量、字段属性值等）")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("inspector")]),t._v("面板：可以查看对象的基本信息，包括类名、所在包、父类、类加载器、对象占用内存、GC root信息。下面的Statics可以查看其基本数据类型，对象右键outcoming视图可以查看其调用的外部对象。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220915002441866.png",alt:"image-20220915002441866"}})]),t._v(" "),a("ul",[a("li",[t._v("（TODO）"),a("strong",[t._v("集合状态的检测")]),t._v("，如：通过 ArrayList 或数组的填充率定位空集合空数组造成的内存浪费、通过 HashMap 冲突率判定 hash 策略是否合理等。")])])]),t._v(" "),a("li",[a("p",[t._v("[4]条件检索（OQL、正则匹配查询等）")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("按虚拟内存地址寻址")]),t._v("：根据对象的十六进制地址查找对象。")]),t._v(" "),a("li",[a("strong",[t._v("OQL")]),t._v("：提供一种类似于SQL的对象（类）级别统一结构化查询语言。如：查找 size＝0 且未使用过的 ArrayList：  "),a("code",[t._v("select * from java.util.ArrayList where size=0 and modCount=0")]),t._v("；查找所有的String的length属性的：  "),a("code",[t._v("select s.length from instanceof String s")]),t._v("。")])])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220913003713039.png",alt:"image-20220913003713039"}})]),t._v(" "),a("h2",{attrs:{id:"三、项目实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、项目实践"}},[t._v("#")]),t._v(" 三、项目实践")]),t._v(" "),a("h3",{attrs:{id:"_3-1-oom异常的排查流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-oom异常的排查流程"}},[t._v("#")]),t._v(" 3.1 OOM异常的排查流程")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("日志")]),t._v("：通过观察日志，再结合最近的上线版本或者更改的代码看能否快速定位到问题。")]),t._v(" "),a("li",[a("strong",[t._v("Heap Dump")]),t._v("：如果无法直接通过日志分析出，则利用内存分析工具（例如MAT）分析Heap Dump文件，通过其内存视图检查是内存溢出还是内存泄漏问题。")]),t._v(" "),a("li",[a("strong",[t._v("对象引用关系链")]),t._v("：如果是内存泄漏问题，则通过其"),a("strong",[t._v("线程调用链视图")]),t._v("、"),a("strong",[t._v("对象引用视图")]),t._v("、"),a("strong",[t._v("GC Root链路")]),t._v("定位出现内存泄漏的代码区域，并进行修复。")]),t._v(" "),a("li",[a("strong",[t._v("参数优化")]),t._v("：如果不是内存泄漏问题，即内存中存在的实例都是合理的，那么就需要考虑对内存进行调优，可以从下面几个角度考虑：\n"),a("ul",[a("li",[t._v("如果当前物理内存还未分配满，则考虑调大堆区内存大小："),a("code",[t._v("-Xms")]),t._v("，"),a("code",[t._v("-Xmx")])]),t._v(" "),a("li",[t._v("如果物理内存已满，则考虑加大内存或者部署多实例进行负载均衡")])])])]),t._v(" "),a("h3",{attrs:{id:"_3-2-项目遇到的oom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-项目遇到的oom"}},[t._v("#")]),t._v(" 3.2 项目遇到的OOM")]),t._v(" "),a("p",[t._v("OOM异常：")]),t._v(" "),a("ol",[a("li",[t._v("情报板自动发布大量调用了new Thread，导致无法创建新的线程")])]),t._v(" "),a("blockquote",[a("p",[t._v("解决：")]),t._v(" "),a("ul",[a("li",[t._v("通过日志即+最近上线的代码即快速定位到问题代码处")]),t._v(" "),a("li",[t._v("该用线程池解决问题")])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("解析大XML导致的OOM")])]),t._v(" "),a("blockquote",[a("p",[t._v("TODO")]),t._v(" "),a("p",[t._v("原因：BW源码解析XML存在bug导致了内存泄漏")]),t._v(" "),a("p",[t._v("解决：")]),t._v(" "),a("ul",[a("li",[t._v("Heap Dump when OOM")]),t._v(" "),a("li",[t._v("通过MAT解析堆快照\n"),a("ul",[a("li",[t._v("通过实例内存视图定位大内存实例")]),t._v(" "),a("li",[t._v("通过对象引用视图定位问题代码")])])]),t._v(" "),a("li",[t._v("引用第三方框架进行XML解析")])])]),t._v(" "),a("p",[t._v("No Buffer space available")]),t._v(" "),a("ol",[a("li",[t._v("大量创建socket连接导致无法创建新的连接（十多万）")])]),t._v(" "),a("blockquote",[a("p",[t._v("原因：与设备通信过程通过TCP进行连接，而每次通信都创建了新的连接，旧的连接又没有释放")]),t._v(" "),a("p",[t._v("解决：")]),t._v(" "),a("ul",[a("li",[t._v("日志分析定位问题")]),t._v(" "),a("li",[t._v("建立缓存连接管道解决")])])]),t._v(" "),a("h2",{attrs:{id:"四、参数调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、参数调优"}},[t._v("#")]),t._v(" 四、参数调优")]),t._v(" "),a("h3",{attrs:{id:"_4-1-jvm参数分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-jvm参数分类"}},[t._v("#")]),t._v(" 4.1 JVM参数分类")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/127352212",target:"_blank",rel:"noopener noreferrer"}},[t._v("参数分类"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903802378665997",target:"_blank",rel:"noopener noreferrer"}},[t._v("参数调优"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("标准参数（-）：所有的JVM实现都必须实现这些参数的功能，而且向后兼容；")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("例子：-verbose:class，-verbose:gc，-verbose:jni……")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("非标准参数（-X）：默认jvm实现这些参数的功能，但是并不保证所有jvm实现都满足，且不保证向后兼容；")])])]),t._v(" "),a("blockquote",[a("p",[t._v("例子：Xms20m，-Xmx20m，-Xmn20m，-Xss128k……")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("非Stable参数（-XX）：此类参数各个jvm实现会有所不同，将来可能会随时取消，需要慎重使用；")])])]),t._v(" "),a("blockquote",[a("p",[t._v("例子：-XX:+PrintGCDetails，-XX:-UseParallelGC，-XX:+PrintGCTimeStamps……")])]),t._v(" "),a("h3",{attrs:{id:"_4-2-常见参数调优"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-常见参数调优"}},[t._v("#")]),t._v(" 4.2 常见参数调优")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000038190184",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方推荐的堆区大小配置"),a("OutboundLink")],1)])]),t._v(" "),a("blockquote",[a("p",[t._v("结合个人面试准备中的面试经历模块")])]),t._v(" "),a("p",[a("strong",[t._v("内存相关（重点）")])]),t._v(" "),a("blockquote",[a("p",[t._v("对于堆内存大小的调整，JDK官方给了下面的建议进行调整：")]),t._v(" "),a("ol",[a("li",[t._v("堆大小（-Xms，-Xmx）：老年代存活对象的3-4倍，即【Full GC之后的剩余的老年代内存占用】的3-4倍。")]),t._v(" "),a("li",[t._v("元空间大小（-XX:MetaspaceSize，-XX:MaxMetaspaceSize）：老年代存活对象的1.2-1.5倍。")]),t._v(" "),a("li",[t._v("年轻代大小（-Xmn）：老年代存活对象的1-1.5倍。")]),t._v(" "),a("li",[t._v("老年代大小：老年代存活对象的2-3倍。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimages1460000038190189.png",alt:"img"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("辅助参数：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-XX:+HeapDumpOnOutOfMemoryError")]),t._v("：当抛出OOM时进行HeapDump")]),t._v(" "),a("li",[a("code",[t._v("-XX:HeapDumpPath=/home/tmp/logs")])])])]),t._v(" "),a("li",[a("p",[t._v("大小调整：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-Xms20m")]),t._v("：设置jvm初始化堆大小为20m，一般与-Xmx相同，避免动态扩容带来的频繁GC")]),t._v(" "),a("li",[a("code",[t._v("-Xmx20m")]),t._v("：设置jvm最大可用内存大小为20m")]),t._v(" "),a("li",[a("code",[t._v("-Xmn20m")]),t._v("：设置新生代大小为20m")]),t._v(" "),a("li",[a("code",[t._v("-Xss128k")]),t._v("：设置每个线程的栈大小为128k")]),t._v(" "),a("li",[a("code",[t._v("-XX:NewRatio")]),t._v("：设置老年代和年轻代的比例，默认是2，即老年代：年轻代为2：1")]),t._v(" "),a("li",[a("code",[t._v("-XX:SurvivorRatio=8")]),t._v("：配置年轻代中的eden/survivor的比例为8，即如果新生代内存内存为10M，会分配给Eden-8M，Survivor（from）-1M，Survivor（to）-1M")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesv2-5acf2edfdf919ec7d4bda402e32b779c_1440w.jpg",alt:"img"}})]),t._v(" "),a("p",[a("strong",[t._v("GC相关")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("垃圾回收器")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-XX:UseSerialGC")])]),t._v(" "),a("li",[a("code",[t._v("-XX:+UseConcMarkSweepGC")]),t._v("：使用CMS收集器（jdk14已经被移除）")]),t._v(" "),a("li",[a("code",[t._v("-XX:+UseParallelOldGC")]),t._v("：使用ParallelGC垃圾回收器")]),t._v(" "),a("li",[a("code",[t._v("-XX:+UseG1GC")]),t._v("：使用G1垃圾回收器")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220913223539026.png",alt:"image-20220913223539026"}})])]),t._v(" "),a("li",[a("p",[a("code",[t._v("-XX:CMSInitiatingOccupancyFraction=80 CMS gc")]),t._v("，表示在老年代达到80%使用率时马上进行回收")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("-XX:+PrintGCDetails")]),t._v("：打印GC详情")]),t._v(" "),a("ul",[a("li",[t._v("eden space 8192K, 33% used：eden区域总共8192k，使用了33%。2731/8192约等于0.33")]),t._v(" "),a("li",[t._v("from space 1024K, 0% used")]),t._v(" "),a("li",[t._v("to space 1024K, 0%used")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimagesimage-20220913220538466.png",alt:"image-20220913220538466"}}),a("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/imagesimage-20220913220152081.png",alt:"image-20220913220152081"}})]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-XX:+PrintGCTimeStamps")]),t._v("：打印时间戳")])]),t._v(" "),a("h2",{attrs:{id:"四、参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、参考"}},[t._v("#")]),t._v(" 四、参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.cn/post/7074762489736478757#heading-6",target:"_blank",rel:"noopener noreferrer"}},[t._v("【性能优化】大厂OOM优化和监控方案"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);