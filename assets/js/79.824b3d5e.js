(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{456:function(v,_,l){"use strict";l.r(_);var o=l(12),t=Object(o.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("blockquote",[_("p",[v._v("Drools是一款复合事件流处理的规则引擎，底层RTC引擎（前向链式推荐引擎）及Phreak算法实现规则匹配和规则到决策树的转化。特点就是能够高效处理复合事件，并且规则文件可以将业务规则和业务逻辑处理解耦，提高代码可读性。我们的项目是一个基于事件流处理的项目，需要跟多个上下游系统对接，并且收集和编排业务规则，并监听航运周期的各个进程点，当订单进程发生变化，则通过Drools进行规则处理。而Drools遵循CEP框架的处理流程，我们的系统主要包括以下几个过程：")]),v._v(" "),_("ol",[_("li",[v._v("规则管理（管理EPL）")]),v._v(" "),_("li",[v._v("事件接入（监听订单各个进程点状态变化）")]),v._v(" "),_("li",[v._v("预处理（业务层面对事件进行预处理）")]),v._v(" "),_("li",[v._v("数据模型（业务层将预处理数据封装成数据模型）")])]),v._v(" "),_("p",[v._v("Drools")]),v._v(" "),_("ol",[_("li",[v._v("EPL解析（跟SQL解析器类似）")]),v._v(" "),_("li",[v._v("CEP引擎处理（即Drools规则处理）")]),v._v(" "),_("li",[v._v("事件派发（将CEP引擎处理完的符合业务要求的结果派发给对应模块）")]),v._v(" "),_("li",[v._v("行动模块（下游接收到事件后采取行动）")])])]),v._v(" "),_("p",[v._v("进程点监听：航运周期进程点")]),v._v(" "),_("p",[v._v("类比思维学习：")]),v._v(" "),_("ul",[_("li",[v._v("订单生命周期：线程生命周期")])]),v._v(" "),_("p",[v._v("OOM处理")]),v._v(" "),_("p",[v._v("问题：调用源码解析大xml文件会OOM")]),v._v(" "),_("p",[v._v("分析：通过heap dump后用"),_("strong",[v._v("Jprofiler")]),v._v("分析堆信息，进而定位到具体的代码")]),v._v(" "),_("p",[_("img",{attrs:{src:"https://raw.githubusercontents.com/PI-KA-CHU/Image-OSS/main/images20vq101lqo.png",alt:"img"}})]),v._v(" "),_("p",[v._v("解决：引入第三方包进行解析")])])}),[],!1,null,null,null);_.default=t.exports}}]);