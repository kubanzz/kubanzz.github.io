(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{400:function(e,v,_){"use strict";_.r(v);var r=_(12),s=Object(r.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"一、基础命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、基础命令"}},[e._v("#")]),e._v(" 一、基础命令")]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("info")]),e._v("命令：")]),e._v(" "),v("ul",[v("li",[v("strong",[e._v("# Server")]),e._v("：查看系统信息，包括redis的版本信息，使用的端口和process_id和依赖的gcc版本等")]),e._v(" "),v("li",[v("strong",[e._v("# Clients")]),e._v("：客户端连接数量等")]),e._v(" "),v("li",[v("strong",[e._v("# Memory")]),e._v("：内存的使用情况")]),e._v(" "),v("li",[v("strong",[e._v("# Persistence")]),e._v("：持久化备份的参数信息")]),e._v(" "),v("li",[v("strong",[e._v("# State")]),e._v("：redis状态信息")]),e._v(" "),v("li",[v("strong",[e._v("# Replication")]),e._v("：主从同步的相关数据")]),e._v(" "),v("li",[v("strong",[e._v("# Keyspace")]),e._v("：显示已有的空间及空间内的"),v("code",[e._v("key")]),e._v("的数量，在redis客户端通过"),v("code",[e._v("select index")]),e._v("选择相应的空间，类似于选择数据库表，不同的表中存储着不同的数据\n \n"),v("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/images51439443-2aac2200-1cf5-11e9-92f0-a42cf3b6a03f.png",alt:"image"}})]),e._v(" "),v("li",[e._v("在"),v("code",[e._v("redis.conf")]),e._v("文件中可以进行"),v("strong",[e._v("空间数量")]),e._v("的设置，默认值为"),v("strong",[e._v("16")]),e._v("：即可以使用的空间是0-15\n \n"),v("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/images51439386-6abed500-1cf4-11e9-983c-08fa3888b5d2.png",alt:"image"}})])])]),e._v(" "),v("li",[v("p",[v("code",[e._v("flushdb")]),e._v("命令：清除当前keyspace空间的所有键值")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("flushall")]),e._v("命令：清除所有keyspace空间的所有键值")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("dbsize")]),e._v("命令：当前keyspace的键的数量")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("save")]),e._v("命令：人工触发的对redis的"),v("strong",[e._v("持久化")])])]),e._v(" "),v("li",[v("p",[v("code",[e._v("quit")]),e._v("命令：退出当前redis客户端的连接")])])]),e._v(" "),v("p"),e._v(" "),v("h2",{attrs:{id:"二、键命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、键命令"}},[e._v("#")]),e._v(" 二、键命令")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("set key value")]),e._v("：设置键值")]),e._v(" "),v("li",[v("code",[e._v("del key")]),e._v("：删除键，成功则返回1，失败则返回0")]),e._v(" "),v("li",[v("code",[e._v("exists key")]),e._v("：判断键是否存在，存在则返回1，不存在则返回0")]),e._v(" "),v("li",[v("code",[e._v("ttl key")]),e._v("：time to leave，返回的是键的过期时间，单位时间是秒，若返回-1，则代表该键不会过期，返回-2表示该键不存在")]),e._v(" "),v("li",[v("code",[e._v("expire key time")]),e._v("：设置键的过期时间，如"),v("code",[e._v("expire a 10")]),e._v("表示设置键a的过期时间为10秒")]),e._v(" "),v("li",[v("code",[e._v("type key")]),e._v("：返回键的类型，如string，hash等")]),e._v(" "),v("li",[v("code",[e._v("randomkey")]),e._v("：返回随机的key（键）")]),e._v(" "),v("li",[v("code",[e._v("rename key1 key2")]),e._v("：将键名进行重命名，如"),v("code",[e._v("key a b")]),e._v("则将键a的名改为键b，若替换的键名存在，则会将已有的键进行覆盖，即将b的键值覆盖，得到的是"),v("code",[e._v("key：b，value：a")])]),e._v(" "),v("li",[v("code",[e._v("renamenx key1 key2")]),e._v("：加了nx结尾的rename命令会进行一定的逻辑判断，该命令会判断该替换的键是否存在，如果存在则返回0，表示替换失败，若不存在则返回1，表示替换成功")])]),e._v(" "),v("p"),e._v(" "),v("h2",{attrs:{id:"三、数据结构命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、数据结构命令"}},[e._v("#")]),e._v(" 三、数据结构命令")]),e._v(" "),v("h3",{attrs:{id:"string字符串"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#string字符串"}},[e._v("#")]),e._v(" String字符串")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("setex key time value")]),e._v("：创建键的时候为键设置其有效时间，单位时间为秒，"),v("code",[e._v("psetex")]),e._v("设置的时间单位为毫秒")]),e._v(" "),v("li",[v("code",[e._v("getrange key start end")]),e._v("：获取字符串的某一片段（start到end的间字段）")]),e._v(" "),v("li",[v("code",[e._v("getset key value")]),e._v("：为key赋上新的值，返回被替换之前的值。")]),e._v(" "),v("li",[v("code",[e._v("mset key value key value")]),e._v("：进行多个键值的设置")]),e._v(" "),v("li",[v("code",[e._v("mget key1 key2 key3")]),e._v("：进行多个键值的获取，获取到键key1,key2,key3的值")]),e._v(" "),v("li",[v("code",[e._v("strlen key")]),e._v("：返回键值的长度")]),e._v(" "),v("li",[v("code",[e._v("msetnx key value key value")]),e._v("：进行批量的键设置，需要设置的键不存在才会赋值成功，该命令具有"),v("strong",[e._v("原子性")]),e._v("，及要么全部设置成功返回1，要么都是失败返回0。")]),e._v(" "),v("li",[v("code",[e._v("incr key")]),e._v("：将类型的Integer的键值进行加一操作")]),e._v(" "),v("li",[v("code",[e._v("incrby key number")]),e._v("：为键值一次性加上number的数，如"),v("code",[e._v("incr 1 100")]),e._v("，则表示为键为1的值增加100.")]),e._v(" "),v("li",[v("code",[e._v("decr key")]),e._v("：将类型的Integer的键值进行减一操作")]),e._v(" "),v("li",[v("code",[e._v("decrby key number")]),e._v("：为键值一次性减去number的数")]),e._v(" "),v("li",[v("code",[e._v("append key str")]),e._v("：为key的值加上字符串str")])]),e._v(" "),v("p"),e._v(" "),v("h3",{attrs:{id:"hash哈希"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hash哈希"}},[e._v("#")]),e._v(" Hash哈希")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("hset key filed value")]),e._v("：设置哈希键值")]),e._v(" "),v("li",[v("code",[e._v("hexists key field")]),e._v("：判断键是否存在")]),e._v(" "),v("li",[v("code",[e._v("hget key field")]),e._v("：获取键中filed所对应的值")]),e._v(" "),v("li",[v("code",[e._v("hgetall key")]),e._v("：获取键中所有的field和对应的value")]),e._v(" "),v("li",[v("code",[e._v("hkeys key")]),e._v("：获取键中 所有的filed值")]),e._v(" "),v("li",[v("code",[e._v("hvals key")]),e._v("：获取键中所有的value值")]),e._v(" "),v("li",[v("code",[e._v("hlen key")]),e._v("：获取键中filed的数量")]),e._v(" "),v("li",[v("code",[e._v("hmset key field name field name")]),e._v("：批量设置键中的field和value")]),e._v(" "),v("li",[v("code",[e._v("hmget key field field")]),e._v("：批量获取键中field的value")]),e._v(" "),v("li",[v("code",[e._v("hdel key field field")]),e._v("：删除键中的多个field及其值")]),e._v(" "),v("li",[v("code",[e._v("hsetnx key field value")]),e._v("：若存在这个field，则设置失败返回0，否则返回1")])]),e._v(" "),v("p"),e._v(" "),v("h3",{attrs:{id:"list列表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#list列表"}},[e._v("#")]),e._v(" List列表")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("lpush key value value")]),e._v("：将多个value添加到key中，添加的过程是将value从链表头部一个一个插入，及最后一个加入的是在链表的头部")]),e._v(" "),v("li",[v("code",[e._v("llen key")]),e._v("：获取key的数量")]),e._v(" "),v("li",[v("code",[e._v("lrange key startIndex stopIndex")]),e._v("：获取key列表指定下标范围内的元素")]),e._v(" "),v("li",[v("code",[e._v("lindex index")]),e._v("：获取指定下标的元素值")]),e._v(" "),v("li",[v("code",[e._v("lpop key")]),e._v("：移除key列表的首个（头）元素")]),e._v(" "),v("li",[v("code",[e._v("rpop key")]),e._v("：移除key列表的最后（末尾）元素")])]),e._v(" "),v("p"),e._v(" "),v("h3",{attrs:{id:"set集合"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#set集合"}},[e._v("#")]),e._v(" Set集合")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("sadd key value value")]),e._v("：将多个value加入key集合中")]),e._v(" "),v("li",[v("code",[e._v("scard key")]),e._v("：返回集合中的数量")]),e._v(" "),v("li",[v("code",[e._v("smembers key")]),e._v("：返回集合中的所有成员")]),e._v(" "),v("li",[v("code",[e._v("sdiff key1 key2")]),e._v("：返回key1与key2的差值，即key1减去ke1和key2中共同存在的元素")]),e._v(" "),v("li",[v("code",[e._v("sinter key1 key2")]),e._v("：返回key1与key2的交集")]),e._v(" "),v("li",[v("code",[e._v("sunion key1 key2")]),e._v("：返回key1与key2的并集")]),e._v(" "),v("li",[v("code",[e._v("srandmember key1 number")]),e._v("：返回集合中的随机的number个数")]),e._v(" "),v("li",[v("code",[e._v("sismember key member")]),e._v("：判断member是否为集合key中的元素，是则返回1，不是则返回0")]),e._v(" "),v("li",[v("code",[e._v("srem key value value")]),e._v("：移除集合中的多个元素")]),e._v(" "),v("li",[v("code",[e._v("spop key")]),e._v("：随机移除并返回移除的元素")])]),e._v(" "),v("p"),e._v(" "),v("h3",{attrs:{id:"sortedset有序集合"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#sortedset有序集合"}},[e._v("#")]),e._v(" Sortedset有序集合")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("zadd key score member score member")]),e._v("：为有序集合添加多个成员元素，score为member的值，且集合按score的值进行排序")]),e._v(" "),v("li",[v("code",[e._v("zcard key")]),e._v("：返回集合中成员的数量")]),e._v(" "),v("li",[v("code",[e._v("zscore key member")]),e._v("：返回member元素的score")]),e._v(" "),v("li",[v("code",[e._v("zcount key min max")]),e._v("：返回score在min到max范围内的member数量")]),e._v(" "),v("li",[v("code",[e._v("zrank key member")]),e._v("：返回member的下标")]),e._v(" "),v("li",[v("code",[e._v("zrange key min max")]),e._v("：返回score在min到max范围内的所有member")]),e._v(" "),v("li",[v("code",[e._v("zrange key min max withscores")]),e._v("：返回score在min到max范围内的所有member及其对应的score")])]),e._v(" "),v("h2",{attrs:{id:"四、安装流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、安装流程"}},[e._v("#")]),e._v(" 四、安装流程")]),e._v(" "),v("h3",{attrs:{id:"redis的安装-linux环境"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#redis的安装-linux环境"}},[e._v("#")]),e._v(" redis的安装（Linux环境）")]),e._v(" "),v("ol",[v("li",[e._v("下载需要的"),v("a",{attrs:{href:"http://download.redis.io/releases/",target:"_blank",rel:"noopener noreferrer"}},[e._v("redis版本"),v("OutboundLink")],1),e._v(" ，将redis压缩包解压并进入其根目录"),v("code",[e._v("tar -zxvf redis-4.0.8.tar.gz -C /home/bigDataPresentationSys/")]),e._v("，执行"),v("code",[e._v("make")]),e._v("命令进行编译。\n"),v("ul",[v("li",[e._v("如果出现各种坑爹问题，参考"),v("a",{attrs:{href:"https://blog.csdn.net/jy0902/article/details/19248299",target:"_blank",rel:"noopener noreferrer"}},[e._v("这篇"),v("OutboundLink")],1)]),e._v(" "),v("li",[v("strong",[e._v("坑爹一")]),e._v("：注意允许的用户，我是在"),v("strong",[e._v("root")]),e._v("用户下才运行成功的（应该跟"),v("strong",[e._v("权限")]),e._v("有关）")]),e._v(" "),v("li",[v("strong",[e._v("坑爹二")]),e._v("：尽量用官方"),v("strong",[e._v("稳定版本")]),e._v("的，减少入一些奇奇怪怪的坑")])])])]),e._v(" "),v("p"),e._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[e._v("执行"),v("code",[e._v("make test")]),e._v("命令检测是否编译成功，在执行命令的时候可能会出现"),v("code",[e._v("You need tcl 8.5 or newer in order to run the Redis test")]),e._v("的错误，通过"),v("code",[e._v("yum install tcl")]),e._v("进行tcl的安装并重新编译即可。")])]),e._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/images51435850-5ced5d80-1cbc-11e9-9c87-e945e5218407.jpeg",alt:"1"}})]),e._v(" "),v("p"),e._v(" "),v("h3",{attrs:{id:"redis的基本操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#redis的基本操作"}},[e._v("#")]),e._v(" redis的基本操作")]),e._v(" "),v("ol",[v("li",[v("p",[v("strong",[e._v("redis服务的启动及关闭")])]),e._v(" "),v("ul",[v("li",[e._v("进入redis根目录下的src文件夹，然后运行"),v("code",[e._v("./redis-server")]),e._v("启动redis服务端，键盘按"),v("code",[e._v("control + C")]),e._v("关闭服务，或者输入命令"),v("code",[e._v("kill -9 PID")]),e._v("（PID为启动redis的PID），或者使用客户端的命令——"),v("code",[e._v("./redis-cli -h 127.0.0.1 shutdown")]),e._v("进行关闭\n \n"),v("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/images51435854-6e366a00-1cbc-11e9-9b58-b5b63e11b59b.jpeg",alt:"2"}})])]),e._v(" "),v("p")]),e._v(" "),v("li",[v("p",[v("strong",[e._v("redis的持久化及及基本的数据操作")])]),e._v(" "),v("ul",[v("li",[e._v("通过redis-cli的shutdown的话redis会进行持久化（存储到磁盘上），即下次启动数据还在，若用"),v("code",[e._v("control + C")]),e._v("关闭redis，即存储的数据会消失。在client执行"),v("code",[e._v("save")]),e._v("命令的话，可以进行人工的持久化操作")]),e._v(" "),v("li",[e._v("redis的src目录下执行"),v("code",[e._v("./redis-cli")]),e._v("启动客户端（redis-server已启动的情况，执行命令"),v("code",[e._v("ping")]),e._v("，若返回"),v("code",[e._v("pong")]),e._v("则连接成功），通过"),v("code",[e._v("set key value")]),e._v("进行数据的设置，通过"),v("code",[e._v("get key")]),e._v("进行相应键值的获取，通过"),v("code",[e._v("keys *")]),e._v("获取所有的key")])]),e._v(" "),v("p")]),e._v(" "),v("li",[v("p",[v("strong",[e._v("redis修改启动的端口号")])]),e._v(" "),v("ul",[v("li",[e._v("通过执行指定执行的"),v("strong",[e._v("端口")]),e._v("进行修改：\n"),v("ul",[v("li",[v("code",[e._v("./redis-server --port 6380")]),e._v("：启动redis服务")]),e._v(" "),v("li",[v("code",[e._v("./redis-cli -p 6380")]),e._v("：启动redis客户端")]),e._v(" "),v("li",[v("code",[e._v("./redis-cli -p 6380 shutdown")]),e._v("：关闭redis服务")])])]),e._v(" "),v("li",[e._v("通过执行指定的"),v("strong",[e._v("配置文件")]),e._v("进行启动：\n"),v("ul",[v("li",[e._v("修改根目录下的"),v("code",[e._v("redis-conf")]),e._v("文件，将port（端口）进行修改，执行命令\n"),v("code",[e._v("./redis-server ../redis-conf")]),e._v("，即可根据配置文件进行启动")])])])]),e._v(" "),v("p")]),e._v(" "),v("li",[v("p",[v("strong",[e._v("redis修改启动密码")])]),e._v(" "),v("ul",[v("li",[e._v("在redis根目录下执行"),v("code",[e._v("sudo vim redis-conf")]),e._v("命令进行配置文件编辑，通过"),v("code",[e._v("/ + requirepass(搜索的单词)")]),e._v("进行搜索，"),v("code",[e._v("n")]),e._v("可以匹配下一个，"),v("code",[e._v("shift + n")]),e._v("可以匹配上一个，找到位置后修改密码，即redis客户端启动的时候需要输入密码才能启动，如"),v("code",[e._v("./redis-cli -a 1991111")]),e._v(" "),v("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/images51436450-5369f280-1cc8-11e9-8715-e7e433f3364c.png",alt:"image"}})])])])])])}),[],!1,null,null,null);v.default=s.exports}}]);