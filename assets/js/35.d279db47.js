(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{362:function(n,s,e){"use strict";e.r(s);var t=e(12),a=Object(t.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"一、实现静态变量的注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、实现静态变量的注入"}},[n._v("#")]),n._v(" 一、实现静态变量的注入")]),n._v(" "),s("ul",[s("li",[s("p",[s("strong",[n._v("参考：")])]),n._v(" "),s("ul",[s("li",[n._v("SpringBoot的"),s("a",{attrs:{href:"https://blog.csdn.net/fxbin123/article/details/80387668",target:"_blank",rel:"noopener noreferrer"}},[n._v("常见注解"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://blog.csdn.net/RogueFist/article/details/79575665",target:"_blank",rel:"noopener noreferrer"}},[n._v("参考一"),s("OutboundLink")],1)]),n._v(" "),s("li",[s("a",{attrs:{href:"https://my.oschina.net/u/2617082/blog/1924530",target:"_blank",rel:"noopener noreferrer"}},[n._v("参考二"),s("OutboundLink")],1)])])]),n._v(" "),s("li",[s("p",[s("strong",[n._v("问题：")])]),n._v(" "),s("p",[n._v("最近使用封装的工具类时遇到了无法正常自动注入的问题，在工具类中对静态成员变量使用"),s("code",[n._v("@Autowired")]),n._v("进入自动注入，虽然编译正常，但是在运行的时候会报"),s("code",[n._v("java.lang.NullPointerException: null")]),n._v("异常。")])]),n._v(" "),s("li",[s("p",[s("strong",[n._v("原因：")])]),n._v(" "),s("p",[n._v("在Springframework里，我们是不能@Autowired一个静态变量，使之成为一个Spring bean的。因为当类加载器加载静态变量时，Spring上下文尚未加载。所以类加载器不会在bean中正确注入静态类，并且会失败。")])]),n._v(" "),s("li",[s("p",[s("strong",[n._v("解决：")]),n._v("( @Component用于将类注册到Spring中,注册完记得重新打包一下项目war包)")]),n._v(" "),s("ul",[s("li",[s("p",[s("strong",[n._v("方法一：")])]),n._v(" "),s("p",[n._v("通过@Autowired"),s("strong",[n._v("注解构造函数")]),n._v("的方式进行注入：Spring扫描到AutowiredTypeComponent的bean，然后赋给静态变量component。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("@Component\npublic class TestClass {\n\n    private static AutowiredTypeComponent component;\n\n    @Autowired\n    public TestClass(AutowiredTypeComponent component) {\n        TestClass.component = component;\n    }\n\n    // 调用静态组件的方法\n    public static void testMethod() {\n        component.callTestMethod()；\n    }\n\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br")])])]),n._v(" "),s("li",[s("p",[s("strong",[n._v("方法二：")])]),n._v(" "),s("p",[s("strong",[n._v("给静态组件加setter方法，并在这个方法上加上@Autowired")]),n._v("：Spring能扫描到AutowiredTypeComponent的bean，然后通过setter方法注入")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("@Component\npublic class TestClass {\n\n    private static AutowiredTypeComponent component;\n\n    @Autowired\n    public void setComponent(AutowiredTypeComponent component){\n        TestClass.component = component;\n    }\n\n    // 调用静态组件的方法\n    public static void testMethod() {\n        component.callTestMethod()；\n    }\n\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br")])])])])])]),n._v(" "),s("p"),n._v(" "),s("h2",{attrs:{id:"二、过滤器的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、过滤器的使用"}},[n._v("#")]),n._v(" 二、过滤器的使用")]),n._v(" "),s("ul",[s("li",[s("p",[s("strong",[n._v("参考：")])]),n._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/u012334071/article/details/42131943",target:"_blank",rel:"noopener noreferrer"}},[n._v("Servlet3.0中@WebFilter的新特性"),s("OutboundLink")],1)])])]),n._v(" "),s("li",[s("p",[s("strong",[n._v("问题：")])]),n._v(" "),s("ul",[s("li",[n._v("没有使用web.xml文件，不知如何进行监听器的注册")]),n._v(" "),s("li",[n._v("过滤器对"),s("code",[n._v("/*")]),n._v("进行过滤时登陆会出现死循环过滤的情况")])])]),n._v(" "),s("li",[s("p",[s("strong",[n._v("解决：")])]),n._v(" "),s("ul",[s("li",[n._v("对监听用的类使用@WebFilter注解进行注册")]),n._v(" "),s("li",[n._v("将静态资源及登陆界面和登陆方法进行过滤")])])]),n._v(" "),s("li",[s("p",[s("strong",[n._v("代码示例：")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('@WebFilter(filterName = "loginFilter",urlPatterns = {"/*"})\npublic class LoginFilter implements Filter {\n\n    private Logger log = LoggerFactory.getLogger(this.getClass());\n    private static final String COOKIE_NAME = "LB_USERID";\n    private static final Long COOKIE_TIME = 60 * 30L;\n\n    @Override\n    public void init(FilterConfig filterConfig) throws ServletException {\n\n    }\n\n    @Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        HttpServletRequest req = (HttpServletRequest)request;\n        HttpServletResponse resp = (HttpServletResponse)response;\n\n        StringBuffer URL = req.getRequestURL();\n        log.debug("Request URL : {}",URL);\n\n        //项目的根URL地址\n        String path = req.getContextPath();\n        String basePath = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort() +  path + "/";\n\n        //登陆界面及静态资源不进行过滤\n        if(URL.indexOf("/index") > -1 || URL.indexOf("/static") > -1 || URL.indexOf("/login/check") > -1){\n            chain.doFilter(request,response);\n            return;\n        }\n\n        Cookie[] cookies = req.getCookies();\n\n        if (cookies != null && cookies.length != 0){\n\n            try {\n                String loginToken = CookieUtil.readLoginToken(req);\n                if(StringUtils.isNotEmpty(loginToken)){\n\n                    //刷新redis中缓存的有效时间\n                    RedisPoolUtil.expire(loginToken,COOKIE_TIME);\n                    //刷新客户端Cookie的有效时间\n                    CookieUtil.refreshLoginToken(req,resp);\n\n                    //递交给下一个过滤器（若没有则结束）\n                    chain.doFilter(request,response);\n                    return;\n                }\n            } catch (NullPointerException e) {\n                log.error("redis 中的缓存过期",e);\n            }\n\n        }\n\n        log.info("用户未登录，跳转至登陆页面");\n        resp.sendRedirect(basePath + "index");\n\n    }\n\n    @Override\n    public void destroy() {\n\n    }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br")])])])])])}),[],!1,null,null,null);s.default=a.exports}}]);