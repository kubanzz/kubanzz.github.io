(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{364:function(s,n,e){"use strict";e.r(n);var t=e(12),a=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"分布式锁实现流程图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁实现流程图"}},[s._v("#")]),s._v(" 分布式锁实现流程图")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/images53300510-3a360200-3883-11e9-9465-ee22e2dabc21.jpeg",alt:"default"}})]),s._v(" "),n("p"),s._v(" "),n("h2",{attrs:{id:"一、-scheduled的使用及其redis的分布式锁创建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、-scheduled的使用及其redis的分布式锁创建"}},[s._v("#")]),s._v(" 一、@Scheduled的使用及其redis的分布式锁创建")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("创建新类，使用"),n("code",[s._v("@Scheduled")]),s._v("注解注释需要定时启动的方法")])]),s._v(" "),n("li",[n("p",[s._v("单机版的定时任务直接将业务代码写入"),n("code",[s._v("@Scheduled")]),s._v("注解的方法中即可，集群版的定时任务需要加"),n("strong",[s._v("分布式锁")]),s._v("，防止同一时间所有集群都启动定时任务，造成资源的浪费。")])]),s._v(" "),n("li",[n("p",[s._v("此处使用分布式的"),n("strong",[s._v("双重防死锁")]),s._v("，在使用redis实现分布式锁的同时，加入判断防止"),n("strong",[s._v("系统在创建了分布式锁后，因为手动关闭或者意外关闭了服务器，造成没有成功执行释放锁的代码，从而形成死锁")]),s._v("。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("双重防死锁")]),s._v("：使用redis实现分布式锁，并且为创建的键赋值为"),n("code",[s._v("System.currentTimeMillis() + RedisConst.APPLICATION.TASK_LOCK_TIME")]),s._v("，即当前系统时间加上有效时间，若分布式锁已经存在，则使用"),n("code",[s._v("if (time != null && System.currentTimeMillis() > Long.valueOf(time))")]),s._v("判断是否过期，若过期，则可以正常获取到分布式锁并使用。")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('@Component\npublic class ApplicationCloseTask {\n\n    @Autowired\n    FormExecuteService formExecuteService;\n\n    private Logger log = LoggerFactory.getLogger(this.getClass());\n\n    /**\n     *  定时更新未处理且已经过期的个人申请单，将其设置为过期状态\n     *  定时任务每七天执行一次\n     *\n     * @author 曾博佳\n     * @since 2019-02-23\n     */\n    @Scheduled(cron = "0 0 0 */7 * ?")\n    public void closeApplication(){\n\n        log.info("定时任务正常启动：{}",new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()));\n\n        //设置分布式锁，若不存在，将其值设置为{当前时间 + 有限时间}，返回true\n        boolean setnxResult = RedisPoolUtil.setnx(RedisConst.APPLICATION.TASK_CLOSE_LOCK,\n                String.valueOf(System.currentTimeMillis() + RedisConst.APPLICATION.TASK_LOCK_TIME));\n\n        if(setnxResult){\n            updateApplicationState();\n        }else{\n            //如果分布式锁已过期或者为永久(出现死锁)，则可以获取分布式锁\n            String time = RedisPoolUtil.get(RedisConst.APPLICATION.TASK_CLOSE_LOCK);\n\n            if (time != null && System.currentTimeMillis() > Long.valueOf(time)){\n                log.info("获取分布式锁{} 成功，ThreadName：{}",RedisConst.APPLICATION.TASK_CLOSE_LOCK,Thread.currentThread().getName());\n\n                String time2 = RedisPoolUtil.getset(RedisConst.APPLICATION.TASK_CLOSE_LOCK,\n                        String.valueOf(System.currentTimeMillis() + RedisConst.APPLICATION.TASK_LOCK_TIME));\n\n                // time2为null表示集群应用的锁已经其他进程执行并删除，从正常逻辑上此时可以获取到锁\n                // 如果time不等于time2并且time2不等于null，说明time2已经被其他进程获取并修改\n                if (time2 == null || StringUtils.equals(time,time2)){\n                    log.info("获取分布式锁{} 成功，ThreadName：{}",RedisConst.APPLICATION.TASK_CLOSE_LOCK,Thread.currentThread().getName());\n                    updateApplicationState();\n                }else{\n                    log.info("分布式锁：{} 获取失败",RedisConst.APPLICATION.TASK_CLOSE_LOCK);\n                }\n\n            }else{\n                log.info("分布式锁：{} 获取失败",RedisConst.APPLICATION.TASK_CLOSE_LOCK);\n            }\n        }\n    }\n\n    /**\n     * 执行更新application状态的代码\n     */\n    private void updateApplicationState(){\n        log.info("分布式锁获取成功，执行关闭订单程序");\n\n        //将已经过期的申请更新为过期状态\n        formExecuteService.updateAllApplicationState(new Date(), NormalConst.APPLICATION.EFFECTIVE_TIME);\n\n        RedisPoolUtil.del(RedisConst.APPLICATION.TASK_CLOSE_LOCK);\n        log.info("分布式锁删除成功");\n    }\n\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br")])]),n("p"),s._v(" "),n("h2",{attrs:{id:"二、springboot-schedule的cron的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、springboot-schedule的cron的使用"}},[s._v("#")]),s._v(" 二、SpringBoot Schedule的"),n("code",[s._v("cron")]),s._v("的使用")]),s._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"http://www.pppet.net/",target:"_blank",rel:"noopener noreferrer"}},[s._v("在线"),n("code",[s._v("corn")]),s._v("生成器"),n("OutboundLink")],1)])]),s._v(" "),n("li",[n("p",[n("code",[s._v('@Scheduled(cron = "0 0 0 */7 * ?")')]),s._v("表示每七天执行一次，其中的"),n("code",[s._v("0 0 0 */7 * * ?")]),s._v("分别表示"),n("strong",[s._v("秒、分、时、日、月、周、年")]),s._v("。")])]),s._v(" "),n("li",[n("p",[s._v("常见的corn表达式：")])])]),s._v(" "),n("blockquote",[n("table",[n("thead",[n("tr",[n("th",[s._v("0 15 10 * * ? *")]),s._v(" "),n("th",[s._v("每天10点15分触发")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("0 15 10 * * ? 2017")]),s._v(" "),n("td",[s._v("2017年每天10点15分触发")])]),s._v(" "),n("tr",[n("td",[s._v("0 * 14 * * ?")]),s._v(" "),n("td",[s._v("每天下午的 2点到2点59分每分触发")])]),s._v(" "),n("tr",[n("td",[s._v("0 0/5 14 * * ?")]),s._v(" "),n("td",[s._v("每天下午的 2点到2点59分(整点开始，每隔5分触发)")])]),s._v(" "),n("tr",[n("td",[s._v("0 0/5 14,18 * * ?")]),s._v(" "),n("td",[s._v("每天下午的 2点到2点59分、18点到18点59分(整点开始，每隔5分触发)")])]),s._v(" "),n("tr",[n("td",[s._v("0 0-5 14 * * ?")]),s._v(" "),n("td",[s._v("每天下午的 2点到2点05分每分触发")])]),s._v(" "),n("tr",[n("td",[s._v("0 15 10 ? * 6L")]),s._v(" "),n("td",[s._v("每月最后一周的星期五的10点15分触发")])]),s._v(" "),n("tr",[n("td",[s._v("0 15 10 ? * 6#3")]),s._v(" "),n("td",[s._v("每月的第三周的星期五开始触发")])])])])]),s._v(" "),n("p"),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/images53106458-1797a680-356e-11e9-90d2-bf2df148703d.png",alt:"image"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/PI-KA-CHU/Image-OSS/main/images53106491-23836880-356e-11e9-8fdd-7c39903a7222.png",alt:"image"}})])])}),[],!1,null,null,null);n.default=a.exports}}]);