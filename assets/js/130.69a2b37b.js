(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{457:function(s,a,e){"use strict";e.r(a);var n=e(12),t=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一、概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、概念"}},[s._v("#")]),s._v(" 一、概念")]),s._v(" "),a("blockquote",[a("p",[s._v("镜像的定制实际就是定制每一层所添加的配置、文件。如果我们把每一层修改、安装、构建、操作的命令都写入一个脚本，用这个脚本来构建、定制镜像，那么就可以实现快速的搭建一个服务环境并快速配置环境相关变量，而不是靠手动的搭建及命令行操作，这个脚本就是Dockerfile。")])]),s._v(" "),a("h4",{attrs:{id:"_1-1、文件格式-四部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、文件格式-四部分"}},[s._v("#")]),s._v(" 1.1、文件格式：(四部分)")]),s._v(" "),a("ul",[a("li",[s._v("基础镜像信息")]),s._v(" "),a("li",[s._v("维护者信息")]),s._v(" "),a("li",[s._v("镜像操作指令")]),s._v(" "),a("li",[s._v("容器启动执行指令")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 1、第一行必须指定 基础镜像信息\nFROM ubuntu\n\n# 2、维护者信息\nMAINTAINER docker_user docker_user@email.com\n\n# 3、镜像操作指令\nRUN echo "deb http://archive.ubuntu.com/ubuntu/ raring main universe" >> /etc/apt/sources.list\nRUN apt-get update && apt-get install -y nginx\nRUN echo "\\ndaemon off;" >> /etc/nginx/nginx.conf\n\n# 4、容器启动执行指令\nCMD /usr/sbin/nginx\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p"),s._v(" "),a("h4",{attrs:{id:"_1-2、常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2、常用命令"}},[s._v("#")]),s._v(" 1.2、常用命令")]),s._v(" "),a("p",[a("strong",[s._v("镜像构建")]),s._v("：("),a("code",[s._v("-f")]),s._v("指定Dockerfile路径，"),a("code",[s._v(".")]),s._v("表示当前路径)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker build .\ndocker build -f /path/to/a/Dockerfile .\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("镜像标签")]),s._v("：("),a("code",[s._v("-t")]),s._v("构建 仓库/标签，可以支持多个)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker build -t nginx/v3 .\ndocker build -t nginx/v3:1.0.2 -t nginx/v3:latest .\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p"),s._v(" "),a("h4",{attrs:{id:"_1-3、指令格式及说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3、指令格式及说明"}},[s._v("#")]),s._v(" 1.3、指令格式及说明")]),s._v(" "),a("p",[s._v("(1)、FROM（指定基础image）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("FROM <image>\n\n# 指定版本\nFROM <image>:<tag>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("(2)、MAINTAINER（用来指定镜像"),a("code",[s._v("创建者信息")]),s._v("）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("MAINTAINER <name>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("(3)、RUN（安装软件用）")]),s._v(" "),a("ul",[a("li",[s._v("构建指令，RUN可以运行任何被基础image支持的命令。如基础image选择了ubuntu，那么软件管理部分只能使用ubuntu的命令。")]),s._v(" "),a("li",[s._v("RUN命令将在当前image中执行任意合法命令并提交执行结果。命令执行提交后，就会自动执行Dockerfile中的"),a("code",[s._v("下一个指令")]),s._v("。")]),s._v(" "),a("li",[s._v("RUN 指令缓存不会在下个命令执行时自动失效。比如 RUN apt-get dist-upgrade -y 的缓存就可能被用于下一个指令. --no-cache 标志可以被用于强制取消缓存使用。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('RUN <command> (the command is run in a shell - /bin/sh -c)\nRUN ["executable", "param1", "param2" ... ] (exec form)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("(4)、CMD（设置"),a("code",[s._v("container启动")]),s._v("时执行的"),a("code",[s._v("操作")]),s._v("）")]),s._v(" "),a("ul",[a("li",[s._v("设置指令，用于"),a("code",[s._v("container启动时")]),s._v("指定的操作。该操作可以是执行自定义脚本，也可以是执行系统命令。该指令只能在文件中存在一次，如果有多个，则"),a("code",[s._v("只执行最后一条")]),s._v("。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# （三种格式）\nCMD ["executable","param1","param2"] (like an exec, this is the preferred form)\nCMD command param1 param2 (as a shell)\n\n# 当Dockerfile指定了ENTRYPOINT，那么使用下面的格式：\nCMD ["param1","param2"] (作为ENTRYPOINT的默认参数)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("(5)、ENTRYPOINT（设置"),a("code",[s._v("container启动时")]),s._v("执行的"),a("code",[s._v("操作")]),s._v("）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 单独使用\nENTRYPOINT ["executable", "param1", "param2"] (like an exec, the preferred form)\nENTRYPOINT command param1 param2 (as a shell)\n\n# 于CMD结合使用 - 2种情况\n# a、CMD为完整的可执行命令，则指令将不会被执行，只有ENTRYPOINT指令被执行（相互覆盖）\nCMD echo “Hello, World!”  \nENTRYPOINT ls -l  \n\n# b、CMD是参数部分，ENTRYPOINT指令只能使用JSON方式指定执行命令，而不能指定参数\nFROM ubuntu  \nCMD ["-l"]  \nENTRYPOINT ["/usr/bin/ls"]  \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("(6)、USER（设置container容器的"),a("code",[s._v("用户")]),s._v("）")]),s._v(" "),a("ul",[a("li",[s._v("设置指令，设置启动容器的用户，默认是root用户。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 指定memcached的运行用户  \nENTRYPOINT ["memcached"]  \nUSER daemon  \n或  \nENTRYPOINT ["memcached", "-u", "daemon"]  \n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("(7)、EXPOSE（指定容器需要"),a("code",[s._v("映射")]),s._v("到宿主机器的"),a("code",[s._v("端口")]),s._v("）")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("设置指令，该指令会将容器中的端口映射成宿主机器中的某个端口。当你需要访问容器的时候，可以不是用容器的IP地址而是使用宿主机器的IP地址和映射后的端口。")]),s._v(" "),a("ul",[a("li",[s._v("一、在Dockerfile使用EXPOSE设置需要映射的容器端口")]),s._v(" "),a("li",[s._v("二、在运行容器的时候指定-p选项加上EXPOSE设置的端口")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 注：若无指定宿主主机的映射端口，则会被随机映射\n\n# 映射一个端口  \nEXPOSE port1  \n# 相应的运行容器使用的命令  \ndocker run -p port1 image  \n\n# 映射多个端口  \nEXPOSE port1 port2 port3  \n# 相应的运行容器使用的命令（随机）\ndocker run -p port1 -p port2 -p port3 image  \n# 指定需要映射到宿主机器上的某个端口号  （指定）\ndocker run -p host_port1:port1 -p host_port2:port2 -p host_port3:port3 image  \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("ul",[a("li",[s._v("端口映射是docker比较重要的一个功能，原因在于我们"),a("code",[s._v("每次运行容器的时候容器的IP地址不能指定，而是在桥接网卡的地址范围内随机生成的")]),s._v("。宿主机器的IP地址是固定的，我们可以将容器的端口的映射到宿主机器上的一个端口，免去每次访问容器中的某个服务时都要查看容器的IP的地址。对于一个运行的容器，可以使用"),a("code",[s._v("docker port + 容器中需要映射的端口和容器的ID")]),s._v("来查看该端口号在宿主机器上的映射端口。")])]),s._v(" "),a("p",[s._v("(8)、ENV（用于设置"),a("code",[s._v("环境变量")]),s._v("）")]),s._v(" "),a("ul",[a("li",[s._v("ENV设置的环境变量，可以使用"),a("code",[s._v("docker inspect")]),s._v("命令来查看。同时还可以使用"),a("code",[s._v("docker run --env <key>=<value>")]),s._v("来修改环境变量。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ENV <key> <value>\n# 例:\nENV JAVA_HOME /path/to/java/dirent\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("(9)、ADD（从src"),a("code",[s._v("复制文件")]),s._v("到container的dest路径）")]),s._v(" "),a("ul",[a("li",[s._v("所有拷贝到container中的文件和"),a("code",[s._v("文件夹权限为0755")]),s._v("，uid和gid为0")]),s._v(" "),a("li",[s._v("如果文件是可识别的压缩格式，则docker会"),a("code",[s._v("自动解压缩")]),s._v("（注意压缩格式）")]),s._v(" "),a("li",[s._v("如果"),a("src",[s._v("是文件且"),a("dest",[s._v("中"),a("code",[s._v("不使用")]),s._v("斜杠结束，则会将"),a("dest",[s._v("视为"),a("code",[s._v("文件")]),s._v("，"),a("src",[s._v("的内容会写入"),a("dest")],1)],1)],1)],1)],1),s._v(" "),a("li",[s._v("如果"),a("src",[s._v("是文件且"),a("dest",[s._v("中"),a("code",[s._v("使用斜杠")]),s._v("结束，则会"),a("src",[s._v("文件拷贝到"),a("dest",[s._v("目录下。")])],1)],1)],1)],1)]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# <src> 是相对被构建的源目录的相对路径，可以是文件或目录的路径，也可以是一个远程的文件url;\n# <dest> 是container中的绝对路径\nADD <src> <dest>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("(10)、VOLUME (指定挂载点)")]),s._v(" "),a("ul",[a("li",[s._v("创建一个可以从本地主机或其他容器挂载的挂载点，一般用来存放数据库和需要保持的数据等。")]),s._v(" "),a("li",[s._v("Volume设置指令，使容器中的一个目录具有"),a("code",[s._v("持久化存储数据")]),s._v("的功能，该目录可以被容器本身使用，也可以共享给其他容器使用。我们知道容器使用的是"),a("code",[s._v("AUFS")]),s._v("，这种文件系统不能持久化数据，"),a("code",[s._v("当容器关闭后，所有的更改都会丢失")]),s._v("。当容器中的应用有持久化数据的需求时可以在Dockerfile中使用该指令。如MySQL数据、日志数据等如果不挂载到宿主机器，重启容器后数据都会消失。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('VOLUME ["<mountpoint>"]\n\n# 例：\nVOLUME ["/tmp/data"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("运行通过该Dockerfile生成image的容器，/tmp/data目录中的数据在容器关闭后，里面的数据还存在。例如另一个容器也有持久化数据的需求，且想使用上面容器共享的/tmp/data目录，那么可以运行下面的命令启动一个容器：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# container1为第一个容器的ID，image2为第二个容器运行image的名字。\ndocker run -t -i -rm -volumes-from container1 image2 bash\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("(11)、WORKDIR（切换目录）")]),s._v(" "),a("ul",[a("li",[s._v("设置指令，可以多次切换(相当于"),a("code",[s._v("cd命令")]),s._v(")，对RUN,CMD,ENTRYPOINT生效。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("WORKDIR /path/to/workdir\n\n# 例:在 /p1/p2 下执行 vim a.txt  \nWORKDIR /p1\nWORKDIR p2\nRUN vim a.txt  \n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("(12)、ONBUILD（在子镜像中执行）")]),s._v(" "),a("ul",[a("li",[s._v("ONBUILD 指定的命令在构建镜像时并不执行，而是在它的子镜像中执行。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ONBUILD <Dockerfile关键字>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("(13)、COPY(复制本地主机的src文件为container的dest)")]),s._v(" "),a("ul",[a("li",[s._v("复制本地主机的src文件（为Dockerfile所在目录的相对路径、文件或目录 ）到container的dest。目标路径不存在时，会自动创建。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 当使用本地目录为源目录时，推荐使用COPY\nCOPY <src> <dest>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("(14)、ARG(设置构建镜像时变量)")]),s._v(" "),a("ul",[a("li",[s._v("ARG指令在Docker1.9版本才加入的新指令，ARG 定义的变量"),a("code",[s._v("只在建立 image 时有效")]),s._v("，建立完成后变量就失效消失")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ARG <key>=<value>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("(15)、LABEL(定义标签)")]),s._v(" "),a("ul",[a("li",[s._v("定义一个 image 标签 Owner，并赋值，其值为变量 Name 的值。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("LABEL Owner=$Name\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p"),s._v(" "),a("h2",{attrs:{id:"二、实战-简单版-nginx为例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、实战-简单版-nginx为例"}},[s._v("#")]),s._v(" 二、实战（简单版 - nginx为例）")]),s._v(" "),a("p",[a("strong",[s._v("2.1、创建Dockerfile文件")])]),s._v(" "),a("ul",[a("li",[s._v("FROM：选择指定基础镜像")]),s._v(" "),a("li",[s._v("RUN：执行指令")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("FROM nginx\nRUN echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("strong",[s._v("2.2、运行Dockerfile构建镜像")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 构建镜像\ndocker build -t nginx:v1 .\n\n# 查看镜像\ndocker images\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("2.3、启动镜像容器")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# --name 为容器名，-d为后台运行，-p为指定映射端口:端口，nginx:v1为镜像:标签\ndocker run --name docker_nginx_v1 -d -p 80:80 nginx:v1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[a("p",[a("em",[s._v("问题一")]),s._v("：主机无法访问虚拟机nginx")])]),s._v(" "),a("li",[a("p",[a("em",[s._v("解决")]),s._v("：防火墙配置问题")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/harris135/article/details/74167910",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[a("p",[a("em",[s._v("问题二")]),s._v("：无法正常启动docker实例")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("(iptables failed: iptables --wait -t nat -A DOCKER -p tcp -d 0/0 --dport 8801 -j DNAT --to-destination 172.17.0.3:80 ! -i docker0: iptables: No chain/target/match by that name.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("em",[s._v("解决")]),s._v("：重启docker")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("systemctl restart docker\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p"),s._v(" "),a("h2",{attrs:{id:"三、修改容器内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、修改容器内容"}},[s._v("#")]),s._v(" 三、修改容器内容")]),s._v(" "),a("ul",[a("li",[s._v("在容器启动后，需要对里面的文件进行修改，可以使用"),a("code",[s._v("docker exec -it xx bash")]),s._v("命令再次进行修改（此处修改nginx的主页面显示）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker exec -it docker_nginx_v1 bash\nroot@3729b97e8226: echo '<h1>Hello, Docker neo!</h1>' > /usr/share/nginx/html/index.html\nroot@3729b97e8226: exit\nexit\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("（容器的存储层）修改后，可以通过 "),a("code",[s._v("docker diff")]),s._v(" 命令看到具体的改动")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("docker diff docker_nginx_v1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p"),s._v(" "),a("h2",{attrs:{id:"四、springboot整合docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、springboot整合docker"}},[s._v("#")]),s._v(" 四、SpringBoot整合Docker")]),s._v(" "),a("ul",[a("li",[s._v("在已经搭建好SpringBoot的基础上")])]),s._v(" "),a("h4",{attrs:{id:"_4-1、项目docker支持准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、项目docker支持准备"}},[s._v("#")]),s._v(" 4.1、项目docker支持准备")]),s._v(" "),a("p",[s._v("a、在pom.xml文件中添加docker支持")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<properties>\n\t<docker.image.prefix>springboot-docker</docker.image.prefix>\n</properties>\n\n\x3c!-- docker插件支持 --\x3e\n<plugin>\n\t<groupId>com.spotify</groupId>\n\t<artifactId>docker-maven-plugin</artifactId>\n\t<version>1.0.0</version>\n\t<configuration>\n\t    \x3c!-- 注意artifactId不能包含大写字母 --\x3e\n\t\t<imageName>${docker.image.prefix}/${project.artifactId}</imageName>\n\t\t<dockerDirectory>src/main/docker</dockerDirectory>\n\t\t<resources>\n\t\t\t<resource>\n\t\t\t\t<targetPath>/</targetPath>\n\t\t\t\t<directory>${project.build.directory}</directory>\n                <include>${project.build.finalName}.jar</include>\n\t\t\t</resource>\n\t\t</resources>\n\t</configuration>\n</plugin>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("b、在项目的"),a("code",[s._v("src/main/docker")]),s._v("目录下创建"),a("code",[s._v("Dockerfile")]),s._v("文件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('FROM openjdk:8-jdk-alpine\nVOLUME /tmp\nADD bigdata_presentation.jar app.jar\nENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("参数解释")]),s._v("：")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("FROM")]),s._v("：表示使用 Jdk8 环境 为基础镜像，如果镜像不是本地的会从 DockerHub 进行下载")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("VOLIME")]),s._v("：VOLUME 指向了一个/tmp的目录，由于 Spring Boot 使用内置的Tomcat容器，Tomcat 默认使用/tmp作为工作目录。这个命令的效果是：在宿主机的/var/lib/docker目录下创建一个临时文件并把它链接到容器中的/tmp目录")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("ADD")]),s._v("：拷贝文件并且重命名")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("ENTRYPOINT")]),s._v("：为了缩短 Tomcat 的启动时间，添加java.security.egd的系统属性指向/dev/urandom作为 ENTRYPOINT")])])]),s._v(" "),a("p"),s._v(" "),a("h4",{attrs:{id:"_4-2、项目打包环境构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2、项目打包环境构建"}},[s._v("#")]),s._v(" 4.2、项目打包环境构建")]),s._v(" "),a("p",[a("strong",[s._v("a、dcker安装")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("请参考上一篇\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("b、JDK环境安装")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 安装\nyum -y install java-1.8.0-openjdk*\n\n# 修改环境变量（/etc/profile）\nexport JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.161-0.b14.el7_4.x86_64\nexport PATH=$PATH:$JAVA_HOME/bin\n\n# 使环境变量生效\nsource /etc/profile\n\n# 检查是否安装成功\njava -version\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[a("strong",[s._v("c、Maven环境安装")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 下载压缩包\nwget http://mirrors.shu.edu.cn/apache/maven/maven-3/3.1.1/binaries/apache-maven-3.1.1-bin.tar.gz\n\n# 解压\ntar zxvf apache-maven-3.5.2-bin.tar.gz\n# 移动\nmv apache-maven-3.5.2 /usr/local/maven3\n\n# 修改环境变量（/etc/profile）\nMAVEN_HOME=/usr/local/maven3\nexport MAVEN_HOME\nexport PATH=${PATH}:${MAVEN_HOME}/bin\n\n# 使环境变量生效\nsource /etc/profile\n\n# 修改maven为阿里云镜像仓库，否则镜像构建的时候会很慢\n自行百度\n\n# 检测是否安装成功\nmvn -version\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p"),s._v(" "),a("h4",{attrs:{id:"_4-3、构建springboot的docker镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3、构建springboot的docker镜像"}},[s._v("#")]),s._v(" 4.3、构建SpringBoot的docker镜像")]),s._v(" "),a("blockquote",[a("p",[s._v("将SpringBoot项目拷贝到服务器中，并通过命令行进入其项目目录")])]),s._v(" "),a("p",[s._v("a、测试SpringBoot环境是否正常")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 打包\nmvn clean package -Dmaven.skip.test=true\n\n# 启动\njava -jar target/spring-boot-docker-1.0.jar\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("b、SpringBoot正常则进行其docker镜像的构建")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('# 构建docker镜像\nmvn package docker:build\n\n# 查看构建成功的镜像\ndocker images\n\n# 运行镜像容器\ndocker run -p 8080:8080 -t springboot-docker/bigdata_presentation\n\n# 查看正运行的容器（-a 可查看所有）\ndocker ps\n\n# 构建成功如下\n...\nBuilding image springboot-docker/bigdata_presentation\nStep 1/4 : FROM openjdk:8-jdk-alpine\n\n ---\x3e a3562aa0b991\nStep 2/4 : VOLUME /tmp\n\n ---\x3e Using cache\n ---\x3e b7ebabcea704\nStep 3/4 : ADD bigdata_presentation.jar app.jar\n\n ---\x3e ed2bf2401a6f\nStep 4/4 : ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]\n\n ---\x3e Running in 718ca03aaa8f\nRemoving intermediate container 718ca03aaa8f\n ---\x3e 4f1bedaaf992\nProgressMessage{id=null, status=null, stream=null, error=null, progress=null, progressDetail=null}\nSuccessfully built 4f1bedaaf992\nSuccessfully tagged springboot-docker/bigdata_presentation:latest\n[INFO] Built springboot-docker/bigdata_presentation\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 18.061s\n[INFO] Finished at: Tue Aug 20 11:54:44 CST 2019\n[INFO] Final Memory: 43M/103M\n[INFO] ------------------------------------------------------------------------\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br")])]),a("p",[s._v("访问首页：\n"),a("img",{attrs:{src:"https://user-images.githubusercontent.com/38284818/63319679-71c2ca00-c34d-11e9-9110-bd22dc350031.png",alt:"image"}})]),s._v(" "),a("p"),s._v(" "),a("h4",{attrs:{id:"_4-4、问题及解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4、问题及解决"}},[s._v("#")]),s._v(" 4.4、问题及解决")]),s._v(" "),a("p",[a("strong",[s._v("问题一")]),s._v("：springBoot执行mvn命令异常，Spring Boot:jar中没有主清单属性")]),s._v(" "),a("p",[a("strong",[s._v("解决")]),s._v("："),a("a",{attrs:{href:"https://blog.csdn.net/u010429286/article/details/79085212",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("strong",[s._v("问题二")]),s._v("（坑爹）：mvn构建docker镜像时候异常")]),s._v(" "),a("blockquote",[a("p",[s._v("I/O exception (java.io.IOException) caught when processing request to {}->unix://localhost:80: Connection reset by peer")])]),s._v(" "),a("p",[a("strong",[s._v("解决")]),s._v("："),a("a",{attrs:{href:"https://blog.csdn.net/EasternUnbeaten/article/details/79825851",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考"),a("OutboundLink")],1)]),s._v(" "),a("blockquote",[a("p",[s._v("pom文件中的artifactId不能为大写的，否则会出现上面的异常（坑爹）")])]),s._v(" "),a("p",[a("strong",[s._v("问题三")]),s._v("：如何自定义maven打包后的文件名")]),s._v(" "),a("p",[a("strong",[s._v("解决")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("在pom文件的<build></build>中加入<finalName>自定义文件名</finalName>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p"),s._v(" "),a("h2",{attrs:{id:"五、参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、参考"}},[s._v("#")]),s._v(" 五、参考")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.ityouknow.com/docker/2018/03/12/docker-use-dockerfile.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考一"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"http://www.ityouknow.com/docker/2018/03/15/docker-dockerfile-command-introduction.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考二"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/cbce69c7a52f",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考三"),a("OutboundLink")],1),s._v("（好文）")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/ityouknow/p/8599093.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考四"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/efd70ad53602",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考五"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=t.exports}}]);