(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{388:function(t,a,_){"use strict";_.r(a);var r=_(12),s=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一、what-dubbo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、what-dubbo"}},[t._v("#")]),t._v(" 一、What Dubbo")]),t._v(" "),a("blockquote",[a("p",[t._v("what是一个自顶层往下不断的概念定义解析过程。从上往下为每个关键词下定义。")])]),t._v(" "),a("h3",{attrs:{id:"_1-什么是dubbo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是dubbo"}},[t._v("#")]),t._v(" 1. 什么是Dubbo？")]),t._v(" "),a("p",[t._v("Dubbo是一款高性能、轻量级的开源RPC框架，提供服务自动注册、自动发现等高效服务治理方案，可以和Spring框架无缝集成。")]),t._v(" "),a("h3",{attrs:{id:"_2-dubbo的发展过程是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-dubbo的发展过程是什么"}},[t._v("#")]),t._v(" 2. Dubbo的发展过程是什么？")]),t._v(" "),a("h3",{attrs:{id:"_3-什么是rpc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-什么是rpc"}},[t._v("#")]),t._v(" 3. 什么是RPC？")]),t._v(" "),a("h2",{attrs:{id:"二、why-dubbo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、why-dubbo"}},[t._v("#")]),t._v(" 二、Why Dubbo")]),t._v(" "),a("blockquote",[a("p",[t._v("Why代表应用场景、核心功能、同比优缺点")])]),t._v(" "),a("h3",{attrs:{id:"_1-why-dubbo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-why-dubbo"}},[t._v("#")]),t._v(" 1. why dubbo？")]),t._v(" "),a("blockquote",[a("p",[t._v("why是一个自顶层往下")])]),t._v(" "),a("h4",{attrs:{id:"_1-1-dubbo的使用场景是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-dubbo的使用场景是什么"}},[t._v("#")]),t._v(" 1.1 Dubbo的使用场景是什么")]),t._v(" "),a("p",[t._v("当服务由单体发展到分布式服务后，不同服务间的通信成为关键，而dubbo就是作为一款整合了RPC协议的通信框架，提供服务间的远程方法调用，并且可以跟Spring框架无缝集成，提供服务自动注册与发现、负载均衡及容错机制等高效服务治理方案。")]),t._v(" "),a("ul",[a("li",[t._v("服务自动注册与发现")]),t._v(" "),a("li",[t._v("透明化的远程方法调用")]),t._v(" "),a("li",[t._v("负载均衡及容错机制")])]),t._v(" "),a("h4",{attrs:{id:"_1-2-dubbo的核心功能是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-dubbo的核心功能是什么"}},[t._v("#")]),t._v(" 1.2 Dubbo的核心功能是什么")]),t._v(" "),a("ul",[a("li",[t._v("服务注册与发现功能：支持多种注册中心，使服务消费方能够动态的查找提供方。")]),t._v(" "),a("li",[t._v("网络通信功能：通过对多种NIO框架抽象封装，包括"),a("strong",[t._v("同步转异步")]),t._v("和"),a("strong",[t._v("请求-响应")]),t._v("模式的信息交换方式。")]),t._v(" "),a("li",[t._v("服务通信功能：提供基于接口方法的透明远程过程调用，包括多协议支持，以及"),a("strong",[t._v("负载均衡、失败容错、地址路由")]),t._v("等集成支持。")])]),t._v(" "),a("h3",{attrs:{id:"_2-rpc和http的区别-why-rpc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-rpc和http的区别-why-rpc"}},[t._v("#")]),t._v(" 2. RPC和HTTP的区别（why rpc)？")]),t._v(" "),a("h3",{attrs:{id:"三、how-dubbo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、how-dubbo"}},[t._v("#")]),t._v(" 三、How Dubbo")]),t._v(" "),a("blockquote",[a("p",[t._v("How代表底层实现、底层调用流程、底层组件、底层架构")])]),t._v(" "),a("h3",{attrs:{id:"_1-dubbo架构图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-dubbo架构图"}},[t._v("#")]),t._v(" 1. Dubbo架构图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontents.com/PI-KA-CHU/Image-OSS/main/images/image-20220526104141713.png",alt:"image-20220526104141713"}})]),t._v(" "),a("h3",{attrs:{id:"_2-dubbo的一条请求流程-底层原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-dubbo的一条请求流程-底层原理"}},[t._v("#")]),t._v(" 2. Dubbo的一条请求流程（底层原理）")]),t._v(" "),a("h4",{attrs:{id:"_1-1-服务的暴露流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-服务的暴露流程"}},[t._v("#")]),t._v(" 1.1 服务的暴露流程")]),t._v(" "),a("h4",{attrs:{id:"_1-2-服务引入的流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-服务引入的流程"}},[t._v("#")]),t._v(" 1.2 服务引入的流程")]),t._v(" "),a("h3",{attrs:{id:"_3-duubo的核心组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-duubo的核心组件"}},[t._v("#")]),t._v(" 3. Duubo的核心组件")]),t._v(" "),a("h2",{attrs:{id:"_4-参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-参考资料"}},[t._v("#")]),t._v(" 4. 参考资料")]),t._v(" "),a("ul",[a("li",[t._v("https://juejin.cn/post/6844904127076499463")]),t._v(" "),a("li",[t._v("https://juejin.cn/post/6882522177485144072")])])])}),[],!1,null,null,null);a.default=s.exports}}]);